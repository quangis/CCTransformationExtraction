[{"Question": "Which houses are for sale in Utrecht", "Cleaned_Question": "Which houses are for sale in Utrecht", "PlaceName": ["Utrecht"], "Object": ["houses"], "ObjectQ": ["for sale"], "NER_Question": "which object0 are objectquality0 boolean in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (coreC objectquality 0 boolean)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 boolean"]], "extent": ["placename 0"]}}, {"Question": "Which houses have construction year between 1990 and 2000 in Utrecht", "Cleaned_Question": "Which houses have construction year between 1990 and 2000 in Utrecht", "PlaceName": ["Utrecht"], "Date": ["between 1990 and 2000"], "Object": ["houses"], "ObjectQ": ["construction year"], "NER_Question": "which object0 have objectquality0 interval edate0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR have) (coreC objectquality 0 interval) (date edate 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 interval"]], "extent": ["placename 0"]}}, {"Question": "What houses are for sale and within 0.5km from the main roads in Utrecht", "Cleaned_Question": "What houses are for sale and within 0.5 km from main roads in Utrecht", "PlaceName": ["Utrecht"], "Quantity": ["0.5 km"], "Object": ["houses", "main roads"], "ObjectQ": ["for sale"], "NER_Question": "what object0 are objectquality0 boolean and within equantity0 from object1 in placename0", "TreeStr": "(start what (measure (coreC object 0)) are (condition (coreC objectquality 0 boolean)) and (condition (topoR within) (boolField (quantity equantity 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 boolean"], ["boolField", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What houses are for sale and within 1km from the nearest school in Utrecht", "Cleaned_Question": "What houses are for sale and within 1 km from nearest school in Utrecht", "PlaceName": ["Utrecht"], "Quantity": ["1 km"], "Object": ["houses", "school"], "ObjectQ": ["for sale"], "NER_Question": "what object0 are objectquality0 boolean and within equantity0 from nearest object1 in placename0", "TreeStr": "(start what (measure (coreC object 0)) are (condition (coreC objectquality 0 boolean)) and (condition (topoR within) (boolField (quantity equantity 0) from (extreDist nearest) (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 boolean"], ["boolField", "object 1 sel", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What houses are for sale and within 1km from the nearest supermarket in Utrecht", "Cleaned_Question": "What houses are for sale and within 1 km from nearest supermarket in Utrecht", "PlaceName": ["Utrecht"], "Quantity": ["1 km"], "Object": ["houses", "supermarket"], "ObjectQ": ["for sale"], "NER_Question": "what object0 are objectquality0 boolean and within equantity0 from nearest object1 in placename0", "TreeStr": "(start what (measure (coreC object 0)) are (condition (coreC objectquality 0 boolean)) and (condition (topoR within) (boolField (quantity equantity 0) from (extreDist nearest) (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 boolean"], ["boolField", "object 1 sel", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What houses are for sale in urban areas in Utrecht", "Cleaned_Question": "What houses are for sale in urban areas in Utrecht", "PlaceName": ["Utrecht"], "Field": ["urban areas"], "Object": ["houses"], "ObjectQ": ["for sale"], "NER_Question": "what object0 are objectquality0 boolean in field0 nominal in placename0", "TreeStr": "(start what (measure (coreC object 0)) are (condition (coreC objectquality 0 boolean)) (condition (topoRIn in (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 boolean"], ["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What houses are for sale and in neighborhoods with crime rate lower than 50 per 1000 people in Utrecht", "Cleaned_Question": "What houses are for sale and in neighborhoods with crime rate lower than 50 per 1000 people in Utrecht", "PlaceName": ["Utrecht"], "Quantity": ["50 per 1000 people"], "Object": ["houses", "neighborhoods"], "ObjectQ": ["for sale"], "ConConPro": ["crime rate"], "NER_Question": "what object0 are objectquality0 boolean and in object1 with eveconobjconpro0 ira lower than equantity0 in placename0", "TreeStr": "(start what (measure (coreC object 0)) are (condition (coreC objectquality 0 boolean)) and (condition (topoRIn in (coreC object 1))) with (subcon (coreC eveconobjconpro 0 ira) (predR lower than) (quantity equantity 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition", "subcon"], "measure": [["object 0"]], "condition": [["objectquality 0 boolean"], ["object 1"]], "subcondition": ["eveconobjconpro 0 ira sel", "eveconobjconpro 0 ira"], "extent": ["placename 0"]}}, {"Question": "What houses are for sale and within 1km from the parks in Utrecht", "Cleaned_Question": "What houses are for sale and within 1 km from parks in Utrecht", "PlaceName": ["Utrecht"], "Quantity": ["1 km"], "Object": ["houses", "parks"], "ObjectQ": ["for sale"], "NER_Question": "what object0 are objectquality0 boolean and within equantity0 from object1 in placename0", "TreeStr": "(start what (measure (coreC object 0)) are (condition (coreC objectquality 0 boolean)) and (condition (topoR within) (boolField (quantity equantity 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 boolean"], ["boolField", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Where are the five star hotels in the Happy Valley ski resort", "Cleaned_Question": "Where are five star hotels in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Object": ["five star hotels"], "NER_Question": "where are object0 in placename0", "TreeStr": "(start (measure (location where are (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Which shops are open at 6 pm in Happy Valley ski resort", "Cleaned_Question": "Which shops are open at 6 pm in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Time": ["6 pm"], "Object": ["shops"], "ObjectQ": ["open at"], "NER_Question": "which object0 are objectquality0 interval etime0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (coreC objectquality 0 interval)) (condition (boolField (time etime 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["object 0"]], "condition": [["objectquality 0 interval"], ["boolField"]], "extent": ["placename 0"]}}, {"Question": "Which cafes are in forested areas in Happy Valley ski resort", "Cleaned_Question": "Which cafes are in forested areas in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Field": ["forested areas"], "Object": ["cafes"], "NER_Question": "which object0 are in field0 nominal in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoRIn in (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Where are the ski pistes in Happy Valley ski resort", "Cleaned_Question": "Where are ski pistes in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Object": ["ski pistes"], "NER_Question": "where are object0 in placename0", "TreeStr": "(start (measure (location where are (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Where is the most popular ski piste in Happy Valley ski resort", "Cleaned_Question": "Where is most popular ski piste in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Object": ["ski piste"], "NER_Question": "where is most popular object0 in placename0", "TreeStr": "(start (measure (location where is (extremaR most popular) (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0 sel", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Which ski piste is longest in the Happy Valley", "Cleaned_Question": "Which ski piste is longest in Happy Valley", "PlaceName": ["Happy Valley"], "Object": ["ski piste"], "NER_Question": "which object0 is longest in placename0", "TreeStr": "(start which (measure (coreC object 0)) is (condition (extremaR longest)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [[]], "extent": ["placename 0"]}}, {"Question": "Which hotels are within 0.3km of the longest ski piste in Happy Valley ski resort", "Cleaned_Question": "Which hotels are within 0.3 km of longest ski piste in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Quantity": ["0.3 km"], "Object": ["hotels", "ski piste"], "NER_Question": "which object0 are within equantity0 of longest object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (quantity equantity 0) of (extremaR longest) (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "object 1 sel", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Which neighborhood has the highest crime rate in Amsterdam", "Cleaned_Question": "Which neighborhood has highest crime rate in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["neighborhood"], "ConConPro": ["crime rate"], "NER_Question": "which object0 has highest eveconobjconpro0 ira in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC eveconobjconpro 0 ira)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["eveconobjconpro 0 ira sel", "eveconobjconpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "Where are the individual crimes in Amsterdam", "Cleaned_Question": "Where are individual crimes in Amsterdam", "PlaceName": ["Amsterdam"], "Event": ["individual crimes"], "NER_Question": "where are event0 in placename0", "TreeStr": "(start (measure (location where are (coreC event 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "event 0"]], "extent": ["placename 0"]}}, {"Question": "Which neighborhood has the highest robbery rate in Amsterdam", "Cleaned_Question": "Which neighborhood has highest robbery rate in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["neighborhood"], "ConConPro": ["robbery rate"], "NER_Question": "which object0 has highest eveconobjconpro0 ira in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC eveconobjconpro 0 ira)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["eveconobjconpro 0 ira sel", "eveconobjconpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "Which neighborhood has the highest arson rate in Amsterdam", "Cleaned_Question": "Which neighborhood has highest arson rate in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["neighborhood"], "ConConPro": ["arson rate"], "NER_Question": "which object0 has highest eveconobjconpro0 ira in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC eveconobjconpro 0 ira)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["eveconobjconpro 0 ira sel", "eveconobjconpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "Which neighborhood has the highest burglary rate in Amsterdam", "Cleaned_Question": "Which neighborhood has highest burglary rate in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["neighborhood"], "ConConPro": ["burglary rate"], "NER_Question": "which object0 has highest eveconobjconpro0 ira in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC eveconobjconpro 0 ira)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["eveconobjconpro 0 ira sel", "eveconobjconpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "Which buildings are within 1 minute of driving time from a fire station in Fort Worth", "Cleaned_Question": "Which buildings are within 1 minute of driving time from fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Time": ["1 minute"], "Object": ["buildings", "fire station"], "Network": ["driving time"], "NER_Question": "which object0 are within etime0 of network0 from object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (time etime 0) of (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What buildings are within 2 minutes but not within 1 minute of driving time from a fire station in Fort Worth", "Cleaned_Question": "What buildings are within 2 minutes but not within 1 minute of driving time from fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Time": ["2 minutes", "1 minute"], "Object": ["buildings", "fire station"], "Network": ["driving time"], "NER_Question": "what object0 are within etime0 but not within etime1 of network0 from object1 in placename0", "TreeStr": "(start what (measure (coreC object 0)) are (condition (topoR within) (boolField (time etime 0))) (false but not) (condition (topoR within) (boolField (time etime 1) of (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["object 0"]], "condition": [["boolField"], ["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Which schools are not within 3 minutes of driving time from a fire station in Fort Worth", "Cleaned_Question": "Which schools are not within 3 minutes of driving time from fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Time": ["3 minutes"], "Object": ["schools", "fire station"], "Network": ["driving time"], "NER_Question": "which object0 are not within etime0 of network0 from object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (false not) (condition (topoR within) (boolField (time etime 0) of (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What is the nearest fire station to each fire call in Fort Worth", "Cleaned_Question": "What is nearest fire station to each fire call in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["fire call"], "NER_Question": "what is nearest object0 to each event0 in placename0", "TreeStr": "(start what is (extreDist nearest) (measure (coreC object 0) to each (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["object 0", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What are the hurricanes in Oleander in 1977", "Cleaned_Question": "What are hurricanes in Oleander in 1977", "PlaceName": ["Oleander"], "Date": ["1977"], "Event": ["hurricanes"], "NER_Question": "what are event0 in placename0 in edate0", "TreeStr": "(start what are (measure (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What was the trajectory of a hurricane in Oleander in 1977", "Cleaned_Question": "What was trajectory of hurricane in Oleander in 1977", "PlaceName": ["Oleander"], "Date": ["1977"], "Event": ["trajectory", "hurricane"], "NER_Question": "what was event0 of event1 in placename0 in edate0", "TreeStr": "(start what was (measure (coreC event 0) of (coreC event 1)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["event 0", "event 1"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where was the most intense hurricane in Oleander in 1977", "Cleaned_Question": "Where was most intense hurricane in Oleander in 1977", "PlaceName": ["Oleander"], "Date": ["1977"], "Event": ["hurricane"], "NER_Question": "where was most intense event0 in placename0 in edate0", "TreeStr": "(start (measure (location where was (extremaR most intense) (coreC event 0))) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "event 0 sel", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where was the fastest hurricane in Oleander in 1977", "Cleaned_Question": "Where was fastest hurricane in Oleander in 1977", "PlaceName": ["Oleander"], "Date": ["1977"], "Event": ["hurricane"], "NER_Question": "where was fastest event0 in placename0 in edate0", "TreeStr": "(start (measure (location where was (extremaR fastest) (coreC event 0))) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "event 0 sel", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "How many buildings are affected by a hurricane in Oleander", "Cleaned_Question": "How many buildings are affected by hurricane in Oleander", "PlaceName": ["Oleander"], "Object": ["buildings"], "Event": ["hurricane"], "NER_Question": "how many object0 are affected by event0 in placename0", "TreeStr": "(start (measure (conAm how many) (coreC object 0)) are (condition (topoR affected by) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conAmount", "object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "Which buildings are affected by a hurricane in Oleander", "Cleaned_Question": "Which buildings are affected by hurricane in Oleander", "PlaceName": ["Oleander"], "Object": ["buildings"], "Event": ["hurricane"], "NER_Question": "which object0 are affected by event0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR affected by) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "How many people are affected by a hurricane in Oleander", "Cleaned_Question": "How many people are affected by hurricane in Oleander", "PlaceName": ["Oleander"], "Object": ["people"], "Event": ["hurricane"], "NER_Question": "how many object0 are affected by event0 in placename0", "TreeStr": "(start (measure (conAm how many) (coreC object 0)) are (condition (topoR affected by) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conAmount", "object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "Where are the rocky areas in Spain", "Cleaned_Question": "Where are rocky areas in Spain", "PlaceName": ["Spain"], "Field": ["rocky areas"], "NER_Question": "where are field0 nominal in placename0", "TreeStr": "(start (measure (location where are (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas do have slope larger than 10 percent in Spain", "Cleaned_Question": "What areas have slope larger than 10 percent in Spain", "PlaceName": ["Spain"], "Percent": ["larger than 10 percent"], "Field": ["slope"], "NER_Question": "what areas have field0 ratio epercent0 in placename0", "TreeStr": "(start (measure (location what areas)) (condition (boolR have) (coreC field 0 ratio) (percent epercent 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 ratio"]], "extent": ["placename 0"]}}, {"Question": "What areas do have altitude between 700 and 2000 meters in Spain", "Cleaned_Question": "What areas have altitude between 700 and 2000 meters in Spain", "PlaceName": ["Spain"], "Quantity": ["between 700 and 2000 meters"], "Field": ["altitude"], "NER_Question": "what areas have field0 ratio equantity0 in placename0", "TreeStr": "(start (measure (location what areas)) (condition (boolR have) (coreC field 0 ratio) (quantity equantity 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 ratio"]], "extent": ["placename 0"]}}, {"Question": "What areas do have temperature in Celsius larger than 0 degrees in Spain", "Cleaned_Question": "What areas have temperature in Celsius larger than 0 degrees in Spain", "PlaceName": ["Spain"], "Quantity": ["0 degrees"], "Field": ["temperature in celsius"], "NER_Question": "what areas have field0 interval larger than equantity0 in placename0", "TreeStr": "(start (measure (location what areas)) (condition (boolR have) (coreC field 0 interval) (predR larger than) (quantity equantity 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 interval sel", "field 0 interval"]], "extent": ["placename 0"]}}, {"Question": "What areas do have precipitation lower than 40 millimeters in Spain", "Cleaned_Question": "What areas have precipitation lower than 40 millimeters in Spain", "PlaceName": ["Spain"], "Quantity": ["40 millimeters"], "Field": ["precipitation"], "NER_Question": "what areas have field0 ratio lower than equantity0 in placename0", "TreeStr": "(start (measure (location what areas)) (condition (boolR have) (coreC field 0 ratio) (predR lower than) (quantity equantity 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 ratio sel", "field 0 ratio"]], "extent": ["placename 0"]}}, {"Question": "What areas are at least 3000 meters from the rivers in Spain", "Cleaned_Question": "What areas are at least 3000 meters from rivers in Spain", "PlaceName": ["Spain"], "Quantity": ["3000 meters"], "Object": ["rivers"], "NER_Question": "what areas are at least equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (predR at least) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField sel", "boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are more than 5000 meters from the roads in Spain", "Cleaned_Question": "What areas are more than 5000 meters from roads in Spain", "PlaceName": ["Spain"], "Quantity": ["more than 5000 meters"], "Object": ["roads"], "NER_Question": "what areas are equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the predicted probability surface for little midwife toad in Spain in 2030", "Cleaned_Question": "What is predicted probability surface for little midwife toad in Spain in 2030", "PlaceName": ["Spain"], "Date": ["2030"], "Field": ["predicted probability surface"], "Object": ["little midwife toad"], "NER_Question": "what is field0 ratio for object0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC field 0 ratio) for (coreC object 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the industrial areas in Utrecht", "Cleaned_Question": "Where are industrial areas in Utrecht", "PlaceName": ["Utrecht"], "Field": ["industrial areas"], "NER_Question": "where are field0 nominal in placename0", "TreeStr": "(start (measure (location where are (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Which park is biggest in Utrecht", "Cleaned_Question": "Which park is biggest in Utrecht", "PlaceName": ["Utrecht"], "Object": ["park"], "NER_Question": "which object0 is biggest in placename0", "TreeStr": "(start which (measure (coreC object 0)) is (condition (extremaR biggest)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [[]], "extent": ["placename 0"]}}, {"Question": "Which freeways do have 4 lanes in Netherlands", "Cleaned_Question": "Which freeways have 4 lanes in Netherlands", "PlaceName": ["Netherlands"], "Object": ["lanes", "freeways"], "ConAmount": ["object0 conAmount"], "NER_Question": "which object1 have 4 objconamount0 era in placename0", "TreeStr": "(start which (measure (coreC object 1)) (condition (boolR have) 4 (coreC objconamount 0 era)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 1"]], "condition": [["objconamount 0 era"]], "extent": ["placename 0"]}}, {"Question": "Which city has the highest crime rate in Netherlands", "Cleaned_Question": "Which city has highest crime rate in Netherlands", "PlaceName": ["Netherlands"], "Object": ["city"], "ConConPro": ["crime rate"], "NER_Question": "which object0 has highest eveconobjconpro0 ira in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC eveconobjconpro 0 ira)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["eveconobjconpro 0 ira sel", "eveconobjconpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "Which city has the highest population density in Netherlands", "Cleaned_Question": "Which city has highest population density in Netherlands", "PlaceName": ["Netherlands"], "Object": ["city"], "ConCovPro": ["population density"], "NER_Question": "which object0 has highest objconobjcovpro0 ira in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC objconobjcovpro 0 ira)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["objconobjcovpro 0 ira sel", "objconobjcovpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "What areas do not have groundwater in the UK", "Cleaned_Question": "What areas not have groundwater in UK", "PlaceName": ["UK"], "Field": ["groundwater"], "NER_Question": "what areas not have field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) (false not) (condition (boolR have) (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas do have population density less than 300 per square kilometer in UK", "Cleaned_Question": "What areas have population density less than 300 per square kilometer in UK", "PlaceName": ["UK"], "Quantity": ["300 per square kilometer"], "ConCovPro": ["population density"], "NER_Question": "what areas have objconobjcovpro0 ira less than equantity0 in placename0", "TreeStr": "(start (measure (location what areas)) (condition (boolR have) (coreC objconobjcovpro 0 ira) (predR less than) (quantity equantity 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["objconobjcovpro 0 ira sel", "objconobjcovpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "What areas are minimum 3000 meters and maximum 5000 meters from the roads in UK", "Cleaned_Question": "What areas are minimum 3000 meters and maximum 5000 meters from roads in UK", "PlaceName": ["UK"], "Quantity": ["3000 meters", "5000 meters"], "Object": ["roads"], "NER_Question": "what areas are minimum equantity0 and maximum equantity1 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (extremaR minimum) (boolField (quantity equantity 0))) and (condition (extremaR maximum) (boolField (quantity equantity 1) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["location"]], "condition": [["boolField sel", "boolField"], ["boolField sel", "boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Where are not conservation areas in UK", "Cleaned_Question": "Where are not conservation areas in UK", "PlaceName": ["UK"], "Field": ["conservation areas"], "NER_Question": "where are not field0 nominal in placename0", "TreeStr": "(start (measure (location where are (false not) (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Which houses do not have plumbing in Utrecht", "Cleaned_Question": "Which houses not have plumbing in Utrecht", "PlaceName": ["Utrecht"], "Object": ["houses", "plumbing"], "ConAmount": ["object1 conAmount"], "NER_Question": "which object0 not have objconamount0 era in placename0", "TreeStr": "(start which (measure (coreC object 0)) (false not) (condition (boolR have) (coreC objconamount 0 era)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["objconamount 0 era"]], "extent": ["placename 0"]}}, {"Question": "Which emergency vehicle is closest to the accident in Utrecht", "Cleaned_Question": "Which emergency vehicle is closest to accident in Utrecht", "PlaceName": ["Utrecht"], "Object": ["emergency vehicle"], "Event": ["accident"], "NER_Question": "which object0 is closest to event0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) is (condition (distanceR closest to) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "Where is the best site for a new landfill in UK", "Cleaned_Question": "Where is best site for new landfill in UK", "PlaceName": ["UK"], "Object": ["landfill"], "NER_Question": "where is best site for new object0 in placename0", "TreeStr": "(start (measure (location where is (allocation best site for new (coreC object 0)))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Which forestry areas have Norwegian Spruce trees in Europe", "Cleaned_Question": "Which forestry areas have Norwegian Spruce trees in Europe", "PlaceName": ["Europe"], "Field": ["forestry areas"], "Object": ["norwegian spruce trees"], "ConAmount": ["object0 conAmount"], "NER_Question": "which field0 nominal have objconamount0 era in placename0", "TreeStr": "(start which (measure (coreC field 0 nominal)) (condition (boolR have) (coreC objconamount 0 era)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["field 0 nominal"]], "condition": [["objconamount 0 era"]], "extent": ["placename 0"]}}, {"Question": "Where is the cluster of student residence in Utrecht", "Cleaned_Question": "Where is cluster of student residence in Utrecht", "PlaceName": ["Utrecht"], "Object": ["student residence"], "CovAmount": ["cluster"], "NER_Question": "where is covamount0 loc of object0 in placename0", "TreeStr": "(start (measure (location where is (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Where is the best site for a landscape conservation zone in Zdarske Vrchy", "Cleaned_Question": "Where is best site for landscape conservation zone in Zdarske Vrchy", "PlaceName": ["Zdarske Vrchy"], "Field": ["landscape conservation zone"], "NER_Question": "where is best site for field0 nominal in placename0", "TreeStr": "(start (measure (location where is (allocation best site for (coreC field 0 nominal)))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Where are the fire stations in Utrecht", "Cleaned_Question": "Where are fire stations in Utrecht", "PlaceName": ["Utrecht"], "Object": ["fire stations"], "NER_Question": "where are object0 in placename0", "TreeStr": "(start (measure (location where are (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Where are the holiday accommodations within 1000 meters of a windsurfing spot in Italy", "Cleaned_Question": "Where are holiday accommodations within 1000 meters of windsurfing spot in Italy", "PlaceName": ["Italy"], "Quantity": ["1000 meters"], "Object": ["holiday accommodations", "windsurfing spot"], "NER_Question": "where are object0 within equantity0 of object1 in placename0", "TreeStr": "(start (measure (location where are (coreC object 0))) (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location", "object 0"]], "condition": [["boolField", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Where are the flat areas within 500 meters of a major highway in the United Kingdom", "Cleaned_Question": "Where are flat areas within 500 meters of major highway in United Kingdom", "PlaceName": ["United Kingdom"], "Quantity": ["500 meters"], "Field": ["flat areas"], "Object": ["major highway"], "NER_Question": "where are field0 nominal within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location where are (coreC field 0 nominal))) (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location", "field 0 nominal"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the traffic flow of the A28 motorway in Utrecht", "Cleaned_Question": "What is traffic flow of A28 motorway in Utrecht", "PlaceName": ["A28 motorway", "Utrecht"], "Network": ["traffic flow"], "NER_Question": "what is network0 of placename0 in placename1", "TreeStr": "(start what is (measure (coreC network 0) of placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["network 0"]], "extent": ["placename 1"]}}, {"Question": "What is the shortest route from the resort center to ski pistes in Happy Valley\t", "Cleaned_Question": "What is shortest route from resort center to ski pistes in Happy Valley", "PlaceName": ["Happy Valley"], "Object": ["resort center", "ski pistes"], "Network": ["shortest route"], "NER_Question": "what is network0 from object0 to object1 in placename0", "TreeStr": "(start what is (measure (coreC network 0) from (coreC object 0) to (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["network 0", "object 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Where is the best site for a wind farm in Portland", "Cleaned_Question": "Where is best site for wind farm in Portland", "PlaceName": ["Portland"], "Object": ["wind farm"], "NER_Question": "where is best site for object0 in placename0", "TreeStr": "(start (measure (location where is (allocation best site for (coreC object 0)))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Where is the best site for a new retail store in Toronto", "Cleaned_Question": "Where is best site for new retail store in Toronto", "PlaceName": ["Toronto"], "Object": ["retail store"], "NER_Question": "where is best site for new object0 in placename0", "TreeStr": "(start (measure (location where is (allocation best site for new (coreC object 0)))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the land use in Netherlands", "Cleaned_Question": "What is land use in Netherlands", "PlaceName": ["Netherlands"], "Field": ["land use"], "NER_Question": "what is field0 nominal in placename0", "TreeStr": "(start what is (measure (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Where are the commercial areas in Amsterdam", "Cleaned_Question": "Where are commercial areas in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["commercial areas"], "NER_Question": "where are field0 nominal in placename0", "TreeStr": "(start (measure (location where are (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "How many luxury hotels are in Happy Valley ski resort", "Cleaned_Question": "How many luxury hotels are in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Object": ["luxury hotels"], "NER_Question": "how many object0 are in placename0", "TreeStr": "(start (measure (conAm how many) (coreC object 0)) are in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["conAmount", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Where are the luxury hotels with more than 20 bedrooms in Happy Valley ski resort", "Cleaned_Question": "Where are luxury hotels with more than 20 bedrooms in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Object": ["luxury hotels", "bedrooms"], "ConAmount": ["object1 conAmount"], "NER_Question": "where are object0 with more than 20 objconamount0 era in placename0", "TreeStr": "(start (measure (location where are (coreC object 0))) (condition with (predR more than) 20 (coreC objconamount 0 era)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location", "object 0"]], "condition": [["objconamount 0 era sel", "objconamount 0 era"]], "extent": ["placename 0"]}}, {"Question": "Where are forestry lands in Happy Valley ski resort", "Cleaned_Question": "Where are forestry lands in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Field": ["forestry lands"], "NER_Question": "where are field0 nominal in placename0", "TreeStr": "(start (measure (location where are (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Which hotels are within 0.2 km of the main roads in Happy Valley ski resort", "Cleaned_Question": "Which hotels are within 0.2 km of main roads in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Quantity": ["0.2 km"], "Object": ["hotels", "main roads"], "NER_Question": "which object0 are within equantity0 of object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Which land use contains meteorological stations in Netherlands", "Cleaned_Question": "Which land use contains meteorological stations in Netherlands", "PlaceName": ["Netherlands"], "Field": ["land use"], "Object": ["meteorological stations"], "NER_Question": "which field0 nominal contains object0 in placename0", "TreeStr": "(start which (measure (coreC field 0 nominal)) (condition (topoR contains) (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["field 0 nominal"]], "condition": [["object 0"]], "extent": ["placename 0"]}}, {"Question": "Which roads are intersected with forest areas in UK", "Cleaned_Question": "Which roads are intersected with forest areas in UK", "PlaceName": ["UK"], "Field": ["forest areas"], "Object": ["roads"], "NER_Question": "which object0 are intersected with field0 nominal in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR intersected with) (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What is the land use in the Happy Valley resort", "Cleaned_Question": "What is land use in Happy Valley resort", "PlaceName": ["Happy Valley resort"], "Field": ["land use"], "NER_Question": "what is field0 nominal in placename0", "TreeStr": "(start what is (measure (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Where is the best site for a new ski piste in Happy Valley", "Cleaned_Question": "Where is best site for new ski piste in Happy Valley", "PlaceName": ["Happy Valley"], "Object": ["ski piste"], "NER_Question": "where is best site for new object0 in placename0", "TreeStr": "(start (measure (location where is (allocation best site for new (coreC object 0)))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the predicted probability surface for snowfall in Happy Valley", "Cleaned_Question": "What is predicted probability surface for snowfall in Happy Valley", "PlaceName": ["Happy Valley"], "Field": ["predicted probability surface"], "Event": ["snowfall"], "NER_Question": "what is field0 ratio for event0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) for (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the shortest route from the center of the resort to the ski pistes in Happy Valley", "Cleaned_Question": "What is shortest route from center of resort to ski pistes in Happy Valley", "PlaceName": ["Happy Valley"], "Object": ["center", "resort", "ski pistes"], "Network": ["shortest route"], "NER_Question": "what is network0 from object0 of object1 to object2 in placename0", "TreeStr": "(start what is (measure (coreC network 0) from (coreC object 0) of (coreC object 1) to (coreC object 2)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["network 0", "object 0", "object 1", "object 2"]], "extent": ["placename 0"]}}, {"Question": "What is the slope of the new ski piste in the Happy Valley resort", "Cleaned_Question": "What is slope of new ski piste in Happy Valley resort", "PlaceName": ["Happy Valley resort"], "Field": ["slope"], "Object": ["ski piste"], "NER_Question": "what is field0 ratio of new object0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of new (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0"]}}, {"Question": "From where are the wind farms visible in Amsterdam", "Cleaned_Question": "From where are wind farms visible in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["wind farms"], "NER_Question": "from where are object0 visible in placename0", "TreeStr": "(start from where are (measure (coreC object 0)) (condition (boolR visible)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [[]], "extent": ["placename 0"]}}, {"Question": "Which ski pistes are in the avalanche danger zones in Happy Valley", "Cleaned_Question": "Which ski pistes are in avalanche danger zones in Happy Valley", "PlaceName": ["Happy Valley"], "Field": ["avalanche danger zones"], "Object": ["ski pistes"], "NER_Question": "which object0 are in field0 nominal in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoRIn in (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Where are the accidents within ski pistes in the Happy Valley", "Cleaned_Question": "Where are accidents within ski pistes in Happy Valley", "PlaceName": ["Happy Valley"], "Object": ["ski pistes"], "Event": ["accidents"], "NER_Question": "where are event0 within object0 in placename0", "TreeStr": "(start (measure (location where are (coreC event 0))) (condition (topoR within) (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location", "event 0"]], "condition": [["object 0"]], "extent": ["placename 0"]}}, {"Question": "Which visitor facilities are in the Happy Valley", "Cleaned_Question": "Which visitor facilities are in Happy Valley", "PlaceName": ["Happy Valley"], "Object": ["visitor facilities"], "NER_Question": "which object0 are in placename0", "TreeStr": "(start which (measure (coreC object 0)) are in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["object 0"]], "extent": ["placename 0"]}}, {"Question": "Which properties are within 1000 meters of an abandoned lead smelter in Oleander", "Cleaned_Question": "Which properties are within 1000 meters of abandoned lead smelter in Oleander", "PlaceName": ["Oleander"], "Quantity": ["1000 meters"], "Object": ["properties", "abandoned lead smelter"], "NER_Question": "which object0 are within equantity0 of object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What areas are affected by a tsunami in Indonesia in 2004", "Cleaned_Question": "What areas are affected by tsunami in Indonesia in 2004", "PlaceName": ["Indonesia"], "Date": ["2004"], "Event": ["tsunami"], "NER_Question": "what areas are affected by event0 in placename0 in edate0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR affected by) (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What areas are within 100 meters of cameras in Salford", "Cleaned_Question": "What areas are within 100 meters of cameras in Salford", "PlaceName": ["Salford"], "Quantity": ["100 meters"], "Object": ["cameras"], "NER_Question": "what areas are within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Where is the best site of bus stops that maximize the overall population within 600-meters buffer areas in Utrecht", "Cleaned_Question": "Where is best site of bus stops that maximize overall population within 600 meters buffer areas in Utrecht", "PlaceName": ["Utrecht"], "Quantity": ["600 meters"], "Field": ["buffer areas"], "Object": ["bus stops"], "ConAmount": ["overall population"], "NER_Question": "where is best site of object0 that maximize objconamount0 era within equantity0 field0 boolean in placename0", "TreeStr": "(start (measure (location where is (allocation best site of (coreC object 0)))) that (condition (extremaR maximize) (coreC objconamount 0 era)) (condition (topoR within) (boolField (quantity equantity 0) (coreC field 0 boolean))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["allocation", "object 0"]], "condition": [["objconamount 0 era sel", "objconamount 0 era"], ["boolField", "field 0 boolean"]], "extent": ["placename 0"]}}, {"Question": "What are the political leaning for each county in the United States", "Cleaned_Question": "What are political leaning for each county in United States", "PlaceName": ["United States"], "Object": ["county"], "ObjectQ": ["political leaning"], "NER_Question": "what are objectquality0 nominal for each object0 in placename0", "TreeStr": "(start what are (measure (coreC objectquality 0 nominal)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objectquality 0 nominal"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the number of crime cases for each police district in Texas in 2018", "Cleaned_Question": "What is number of crime cases for each police district in Texas in 2018", "PlaceName": ["Texas"], "Date": ["2018"], "Object": ["police district"], "Event": ["crime cases"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of event0 for each object0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC event 0)) for each (support (coreC object 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["conamount 0 era", "event 0"]], "support": ["object 0"], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where is the mean center of households in the Oost district in Amsterdam", "Cleaned_Question": "Where is mean center of households in Oost district in Amsterdam", "PlaceName": ["Oost district", "Amsterdam"], "Object": ["households"], "CovAmount": ["mean center"], "NER_Question": "where is covamount0 loc of object0 in placename0 in placename1", "TreeStr": "(start (measure (location where is (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the central feature of bank branches in Oleander", "Cleaned_Question": "What is central feature of bank branches in Oleander", "PlaceName": ["Oleander"], "Object": ["bank branches"], "CovAmount": ["central feature"], "NER_Question": "what is covamount0 loc of object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the mean center of library patrons for each district in Oleander", "Cleaned_Question": "What is mean center of library patrons for each district in Oleander", "PlaceName": ["Oleander"], "Object": ["library patrons", "district"], "CovAmount": ["mean center"], "NER_Question": "what is covamount0 loc of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["covamount 0 loc", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the mean center of the fire calls weighted by the priority in Fort Worth", "Cleaned_Question": "What is mean center of fire calls weighted by priority in Fort Worth", "PlaceName": ["Fort Worth"], "Event": ["fire calls"], "EventQ": ["priority"], "CovAmount": ["mean center"], "NER_Question": "what is covamount0 loc of event0 weighted by eventquality0 ordinal in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) (condition (weight weighted by (coreC eventquality 0 ordinal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "extent": ["placename 0"]}}, {"Question": "What is the mean center of customers weighted by the number of transactions in Oleander city", "Cleaned_Question": "What is mean center of customers weighted by number of transactions in Oleander city", "PlaceName": ["Oleander city"], "Object": ["customers"], "Event": ["transactions"], "ConAmount": ["number"], "CovAmount": ["mean center"], "NER_Question": "what is covamount0 loc of object0 weighted by conamount0 era of event0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC object 0)) (condition (weight weighted by (coreC conamount 0 era) of (coreC event 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["covamount 0 loc", "object 0"]], "condition": [["conamount 0 era", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the central feature of bank branches weighted by the number of employees in Oleander city", "Cleaned_Question": "What is central feature of bank branches weighted by number of employees in Oleander city", "PlaceName": ["Oleander city"], "Object": ["bank branches", "employees"], "ConAmount": ["number"], "CovAmount": ["central feature"], "NER_Question": "what is covamount0 loc of object0 weighted by conamount0 era of object1 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC object 0)) (condition (weight weighted by (coreC conamount 0 era) of (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["covamount 0 loc", "object 0"]], "condition": [["conamount 0 era", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Which police stations have fire calls that are outside their alarm territory in Fort Worth", "Cleaned_Question": "Which police stations have fire calls that are outside alarm territory in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["police stations", "alarm territory"], "Event": ["fire calls"], "ConAmount": ["event0 conAmount"], "NER_Question": "which object0 have eveconamount0 era that are outside object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR have) (coreC eveconamount 0 era)) that are (subcon (topoR outside) (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "subcon"], "measure": [["object 0"]], "condition": [["eveconamount 0 era"]], "subcondition": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What are the standard distance circles of West Nile Virus in Fort Worth", "Cleaned_Question": "What are standard distance circles of West Nile Virus in Fort Worth", "PlaceName": ["Fort Worth"], "Event": ["west nile virus"], "CovAmount": ["standard distance circles"], "NER_Question": "what are covamount0 loc of event0 in placename0", "TreeStr": "(start what are (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the directional trend of fire calls for each fire station in Fort Worth", "Cleaned_Question": "What is directional trend of fire calls for each fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["fire calls"], "CovAmount": ["directional trend"], "NER_Question": "what is covamount0 loc of event0 for each object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc", "event 0"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the directional trend of crimes in Amsterdam in 2019", "Cleaned_Question": "What is directional trend of crimes in Amsterdam in 2019", "PlaceName": ["Amsterdam"], "Date": ["2019"], "Event": ["crimes"], "CovAmount": ["directional trend"], "NER_Question": "what is covamount0 loc of event0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the directional trend of animal migration in the Netherlands", "Cleaned_Question": "What is directional trend of animal migration in Netherlands", "PlaceName": ["Netherlands"], "Event": ["animal migration"], "CovAmount": ["directional trend"], "NER_Question": "what is covamount0 loc of event0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"]}}, {"Question": "Where are the single-family zones in Tarrant County, Texas", "Cleaned_Question": "Where are single family zones in Tarrant County , Texas", "PlaceName": ["Tarrant County", "Texas"], "Field": ["single family zones"], "NER_Question": "where are field0 nominal in placename0 , placename1", "TreeStr": "(start (measure (location where are (coreC field 0 nominal))) in (extent placename 0) (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "field 0 nominal"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the total linear mileage of the asphalt streets in Tarrant County in Texas", "Cleaned_Question": "What is total linear mileage of asphalt streets in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["asphalt streets"], "CovAmount": ["total linear mileage"], "NER_Question": "what is covamount0 era of object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC covamount 0 era) of (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 era", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "How many arson cases in Fort Worth in February 2004", "Cleaned_Question": "How many arson cases in Fort Worth in February 2004", "PlaceName": ["Fort Worth"], "Date": ["February 2004"], "Event": ["arson cases"], "NER_Question": "how many event0 in placename0 in edate0", "TreeStr": "(start (measure (conAm how many) (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["conAmount", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the Hispanic food stores in Tarrant County in Texas", "Cleaned_Question": "Where are Hispanic food stores in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["hispanic food stores"], "NER_Question": "where are object0 in placename0 in placename1", "TreeStr": "(start (measure (location where are (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the median household income for each census block in Tarrant County in Texas", "Cleaned_Question": "What is median household income for each census block in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["census block"], "ConAmount": ["household income"], "Amount": ["median"], "NER_Question": "what is amount0 objconamount0 era for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC amount 0) (coreC objconamount 0 era)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["amount 0", "objconamount 0 era"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "Where are the auto accidents in Tarrant County in Texas", "Cleaned_Question": "Where are auto accidents in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Event": ["auto accidents"], "NER_Question": "where are event0 in placename0 in placename1", "TreeStr": "(start (measure (location where are (coreC event 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "event 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the total population for each census block in Tarrant County, Texas", "Cleaned_Question": "What is total population for each census block in Tarrant County , Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["census block"], "ConAmount": ["total population"], "NER_Question": "what is objconamount0 era for each object0 in placename0 , placename1", "TreeStr": "(start what is (measure (coreC objconamount 0 era)) for each (support (coreC object 0)) in (extent placename 0) (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objconamount 0 era"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the median age of people for each census tract in Tarrant County in Texas", "Cleaned_Question": "What is median age of people for each census tract in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["people", "census tract"], "ObjectQ": ["age"], "Amount": ["median"], "NER_Question": "what is amount0 objectquality0 interval of object0 for each object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC amount 0) (coreC objectquality 0 interval) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "objectquality 0 interval", "object 0"]], "support": ["object 1"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the construction year for each house in Oleander", "Cleaned_Question": "What is construction year for each house in Oleander", "PlaceName": ["Oleander"], "Object": ["house"], "ObjectQ": ["construction year"], "NER_Question": "what is objectquality0 interval for each object0 in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 interval)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objectquality 0 interval"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the percentage of the Hispanic population to the total population for each census block in Tarrant County in Texas", "Cleaned_Question": "What is percentage of Hispanic population to total population for each census block in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["census block"], "ConAmount": ["hispanic population", "total population"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of objconamount0 era to objconamount1 era for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC objconamount 0 era) to (coreC objconamount 1 era)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["proportion 0 ira", "objconamount 0 era", "objconamount 1 era"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "Which park has the highest proportion of bald eagle to the bird totals in Texas", "Cleaned_Question": "Which park has highest proportion of bald eagle to bird totals in Texas", "PlaceName": ["Texas"], "Object": ["park", "bald eagle", "bird"], "ConAmount": ["totals"], "Proportion": ["proportion"], "NER_Question": "which object0 has highest proportion0 ira of object1 to object2 conamount0 era in placename0", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC proportion 0 ira) of (coreC object 1) to (coreC object 2) (coreC conamount 0 era)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["proportion 0 ira sel", "proportion 0 ira", "object 1", "object 2", "conamount 0 era"]], "extent": ["placename 0"]}}, {"Question": "What is the number of tractors for each road in Texas", "Cleaned_Question": "What is number of tractors for each road in Texas", "PlaceName": ["Texas"], "Object": ["tractors", "road"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the percentage of owner-occupied houses to the house totals for each census tract in Tarrant County, Texas", "Cleaned_Question": "What is percentage of owner occupied houses to house totals for each census tract in Tarrant County , Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["census tract", "owner occupied houses", "house"], "ConAmount": ["totals"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of object1 to object2 conamount0 era for each object0 in placename0 , placename1", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC object 1) to (coreC object 2) (coreC conamount 0 era)) for each (support (coreC object 0)) in (extent placename 0) (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["proportion 0 ira", "object 1", "object 2", "conamount 0 era"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the crime rate for each police district in Texas in 2019", "Cleaned_Question": "What is crime rate for each police district in Texas in 2019", "PlaceName": ["Texas"], "Date": ["2019"], "Object": ["police district"], "ConConPro": ["crime rate"], "NER_Question": "what is eveconobjconpro0 ira for each object0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC eveconobjconpro 0 ira)) for each (support (coreC object 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["eveconobjconpro 0 ira"]], "support": ["object 0"], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What are the vote totals of an election for each precinct in Dallas", "Cleaned_Question": "What are vote totals of election for each precinct in Dallas", "PlaceName": ["Dallas"], "Object": ["precinct"], "Event": ["vote", "election"], "ConAmount": ["totals"], "NER_Question": "what are event0 conamount0 era of event1 for each object0 in placename0", "TreeStr": "(start what are (measure (coreC event 0) (coreC conamount 0 era) of (coreC event 1)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["event 0", "conamount 0 era", "event 1"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the population density for each census block in Dallas", "Cleaned_Question": "What is population density for each census block in Dallas", "PlaceName": ["Dallas"], "Object": ["census block"], "ConCovPro": ["population density"], "NER_Question": "what is objconobjcovpro0 ira for each object0 in placename0", "TreeStr": "(start what is (measure (coreC objconobjcovpro 0 ira)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objconobjcovpro 0 ira"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the density of robberies for each police beat in Dallas", "Cleaned_Question": "What is density of robberies for each police beat in Dallas", "PlaceName": ["Dallas"], "Object": ["police beat"], "Event": ["robberies"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of event0 for each object0 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC event 0)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["covpro 0 ira", "event 0"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the density of rental units for each census block in Oleander", "Cleaned_Question": "What is density of rental units for each census block in Oleander", "PlaceName": ["Oleander"], "Object": ["rental units", "census block"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["covpro 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the density of rental units in Oleander", "Cleaned_Question": "What is density of rental units in Oleander", "PlaceName": ["Oleander"], "Object": ["rental units"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of object0 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covpro 0 ira", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the density of registered voters for each precinct in Dallas", "Cleaned_Question": "What is density of registered voters for each precinct in Dallas", "PlaceName": ["Dallas"], "Object": ["registered voters", "precinct"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["covpro 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the point density of trees in parks in Oleander", "Cleaned_Question": "What is point density of trees in parks in Oleander", "PlaceName": ["Oleander"], "Field": ["point density"], "Object": ["trees", "parks"], "NER_Question": "what is field0 ratio of object0 in object1 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC object 0)) (condition (topoRIn in (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["field 0 ratio", "object 0"]], "condition": [["object 1"]], "extent": ["placename 0"]}}, {"Question": "What is the point density of fire calls in Oleander", "Cleaned_Question": "What is point density of fire calls in Oleander", "PlaceName": ["Oleander"], "Field": ["point density"], "Event": ["fire calls"], "NER_Question": "what is field0 ratio of event0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the density surface of rainfall measurements in the Netherlands", "Cleaned_Question": "What is density surface of rainfall measurements in Netherlands", "PlaceName": ["Netherlands"], "Field": ["density surface", "rainfall measurements"], "NER_Question": "what is field0 ratio of field1 ratio in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC field 1 ratio)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "field 1 ratio"]], "extent": ["placename 0"]}}, {"Question": "What is the density surface of temperature measurements in Oleander city", "Cleaned_Question": "What is density surface of temperature measurements in Oleander city", "PlaceName": ["Oleander city"], "Field": ["density surface", "temperature measurements"], "NER_Question": "what is field0 ratio of field1 ratio in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC field 1 ratio)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "field 1 ratio"]], "extent": ["placename 0"]}}, {"Question": "What are the directional trends of tornadoes in the Tarrant county from 2010 to 2019", "Cleaned_Question": "What are directional trends of tornadoes in Tarrant county from 2010 to 2019", "PlaceName": ["Tarrant county"], "Date": ["2010", "2019"], "Event": ["tornadoes"], "CovAmount": ["directional trends"], "NER_Question": "what are covamount0 loc of event0 in placename0 from edate0 to edate1", "TreeStr": "(start what are (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the mean direction of freeways in Oleander", "Cleaned_Question": "What is mean direction of freeways in Oleander", "PlaceName": ["Oleander"], "Object": ["freeways"], "CovAmount": ["mean direction"], "NER_Question": "what is covamount0 loc of object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the degree of clustering of fire calls in Fort Worth in 2015", "Cleaned_Question": "What is degree of clustering of fire calls in Fort Worth in 2015", "PlaceName": ["Fort Worth"], "Date": ["2015"], "Event": ["fire calls"], "CovAmount": ["degree of clustering"], "NER_Question": "what is covamount0 loc of event0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the degree of dispersion of the flu cases in Amsterdam in 2019", "Cleaned_Question": "What is degree of dispersion of flu cases in Amsterdam in 2019", "PlaceName": ["Amsterdam"], "Date": ["2019"], "Event": ["flu cases"], "CovAmount": ["degree of dispersion"], "NER_Question": "what is covamount0 loc of event0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the degree of clustering of false fire alarms in Fort Worth", "Cleaned_Question": "What is degree of clustering of false fire alarms in Fort Worth", "PlaceName": ["Fort Worth"], "Event": ["false fire alarms"], "CovAmount": ["degree of clustering"], "NER_Question": "what is covamount0 loc of event0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"]}}, {"Question": "Where are the clusters of fire alarms with the similar priority in Fort Worth", "Cleaned_Question": "Where are clusters of fire alarms with similar priority in Fort Worth", "PlaceName": ["Fort Worth"], "Event": ["fire alarms"], "EventQ": ["priority"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of event0 with similar eventquality0 ordinal in placename0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC event 0))) (condition (weight with similar (coreC eventquality 0 ordinal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location", "covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "extent": ["placename 0"]}}, {"Question": "Where are the clusters of census blocks with the similar median household income in Fort Worth", "Cleaned_Question": "Where are clusters of census blocks with similar median household income in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["census blocks"], "ConAmount": ["household income"], "CovAmount": ["clusters"], "Amount": ["median"], "NER_Question": "where are covamount0 loc of object0 with similar amount0 objconamount0 era in placename0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) (condition (weight with similar (coreC amount 0))) (condition (coreC objconamount 0 era)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition"], "measure": [["location", "covamount 0 loc", "object 0"]], "condition": [["amount 0"], ["objconamount 0 era"]], "extent": ["placename 0"]}}, {"Question": "Where are the clusters of neighborhoods with the similar crime rate in Amsterdam", "Cleaned_Question": "Where are clusters of neighborhoods with similar crime rate in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["neighborhoods"], "CovAmount": ["clusters"], "ConConPro": ["crime rate"], "NER_Question": "where are covamount0 loc of object0 with similar eveconobjconpro0 ira in placename0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) (condition (weight with similar (coreC eveconobjconpro 0 ira))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location", "covamount 0 loc", "object 0"]], "condition": [["eveconobjconpro 0 ira"]], "extent": ["placename 0"]}}, {"Question": "What is the percentage of residential areas inside 1 km area of the central station in Oleander", "Cleaned_Question": "What is percentage of residential areas inside 1 km area of central station in Oleander", "PlaceName": ["Oleander"], "Quantity": ["1 km"], "Field": ["residential areas"], "Object": ["central station"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of field0 nominal inside equantity0 area of object0 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC field 0 nominal)) (condition (topoR inside) (boolField (quantity equantity 0) area of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["proportion 0 ira", "field 0 nominal"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Which properties are within 0.5 km of the Independence Day parade route in Washington D.C.", "Cleaned_Question": "Which properties are within 0.5 km of Independence Day parade route in Washington D.C.", "PlaceName": ["Washington D.C."], "Quantity": ["0.5 km"], "Object": ["properties"], "Event": ["independence day parade route"], "NER_Question": "which object0 are within equantity0 of event0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC event 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "event 0"]], "extent": ["placename 0"]}}, {"Question": "How many dwelling units are in the flood zones in Oleander", "Cleaned_Question": "How many dwelling units are in flood zones in Oleander", "PlaceName": ["Oleander"], "Field": ["flood zones"], "Object": ["dwelling units"], "NER_Question": "how many object0 are in field0 nominal in placename0", "TreeStr": "(start (measure (conAm how many) (coreC object 0)) are (condition (topoRIn in (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conAmount", "object 0"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What is the total area of flood zones in Oleander", "Cleaned_Question": "What is total area of flood zones in Oleander", "PlaceName": ["Oleander"], "Field": ["flood zones"], "CovAmount": ["total area"], "NER_Question": "what is covamount0 era of field0 nominal in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 era) of (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 era", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What are the land use inside the flood zones in Oleander", "Cleaned_Question": "What are land use inside flood zones in Oleander", "PlaceName": ["Oleander"], "Field": ["land use", "flood zones"], "NER_Question": "what are field0 nominal inside field1 nominal in placename0", "TreeStr": "(start what are (measure (coreC field 0 nominal)) (condition (topoR inside) (coreC field 1 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["field 0 nominal"]], "condition": [["field 1 nominal"]], "extent": ["placename 0"]}}, {"Question": "What is the number of households for each precinct in Dallas County", "Cleaned_Question": "What is number of households for each precinct in Dallas County", "PlaceName": ["Dallas County"], "Object": ["households", "precinct"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "How many high school students are in the school district of senior high schools in Oleander", "Cleaned_Question": "How many high school students are in school district of senior high schools in Oleander", "PlaceName": ["Oleander"], "Object": ["high school students", "school district", "senior high schools"], "NER_Question": "how many object0 are in object1 of object2 in placename0", "TreeStr": "(start (measure (conAm how many) (coreC object 0)) are (condition (topoRIn in (coreC object 1) of (coreC object 2))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conAmount", "object 0"]], "condition": [["object 1", "object 2"]], "extent": ["placename 0"]}}, {"Question": "Which properties are within 100 meters of creeks in Oleander", "Cleaned_Question": "Which properties are within 100 meters of creeks in Oleander", "PlaceName": ["Oleander"], "Quantity": ["100 meters"], "Object": ["properties", "creeks"], "NER_Question": "which object0 are within equantity0 of object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 1000 meters of the schools in Oleander", "Cleaned_Question": "What areas are within 1000 meters of schools in Oleander", "PlaceName": ["Oleander"], "Quantity": ["1000 meters"], "Object": ["schools"], "NER_Question": "what areas are within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 2000 meters of the playgrounds in Oleander", "Cleaned_Question": "What areas are within 2000 meters of playgrounds in Oleander", "PlaceName": ["Oleander"], "Quantity": ["2000 meters"], "Object": ["playgrounds"], "NER_Question": "what areas are within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 1000 meters of the arcades in Oleander", "Cleaned_Question": "What areas are within 1000 meters of arcades in Oleander", "PlaceName": ["Oleander"], "Quantity": ["1000 meters"], "Object": ["arcades"], "NER_Question": "what areas are within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 100 meters of the hospitals in Oleander", "Cleaned_Question": "What areas are within 100 meters of hospitals in Oleander", "PlaceName": ["Oleander"], "Quantity": ["100 meters"], "Object": ["hospitals"], "NER_Question": "what areas are within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the percentage of soil type inside 1 km buffer areas of the water wells in Oleander", "Cleaned_Question": "What is percentage of soil type inside 1 km buffer areas of water wells in Oleander", "PlaceName": ["Oleander"], "Quantity": ["1 km"], "Field": ["soil type", "buffer areas"], "Object": ["water wells"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of field0 nominal inside equantity0 field1 boolean of object0 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC field 0 nominal)) (condition (topoR inside) (boolField (quantity equantity 0) (coreC field 1 boolean) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["proportion 0 ira", "field 0 nominal"]], "condition": [["boolField", "field 1 boolean", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the percentage of noise polluted areas in Oleander", "Cleaned_Question": "What is percentage of noise polluted areas in Oleander", "PlaceName": ["Oleander"], "Field": ["noise polluted areas"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of field0 nominal in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["proportion 0 ira", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Where are the houses within 1 minute, 2 minute, and 3 minute driving time from fire station in Oleander", "Cleaned_Question": "Where are houses within 1 minute , 2 minute , and 3 minute driving time from fire station in Oleander", "PlaceName": ["Oleander"], "Time": ["1 minute", "2 minute", "3 minute"], "Object": ["houses", "fire station"], "Network": ["driving time"], "NER_Question": "where are object0 within etime0 , etime1 , and etime2 network0 from object1 in placename0", "TreeStr": "(start (measure (location where are (coreC object 0))) (condition (topoR within) (boolField (time etime 0) (time etime 1) and (time etime 2) (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location", "object 0"]], "condition": [["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 300 meters of runways in Schiphol airport", "Cleaned_Question": "What areas are within 300 meters of runways in Schiphol airport", "PlaceName": ["Schiphol airport"], "Quantity": ["300 meters"], "Object": ["runways"], "NER_Question": "what areas are within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "How many fire calls were answered by a fire station that was not the closest to the fire accidents in Oleander", "Cleaned_Question": "How many fire calls were answered by fire station that was not closest to fire accidents in Oleander", "PlaceName": ["Oleander"], "Object": ["fire station"], "Event": ["fire calls", "fire accidents"], "NER_Question": "how many event0 were answered by object0 that was not closest to event1 in placename0", "TreeStr": "(start (measure (conAm how many) (coreC event 0)) were (condition (boolR answered by) (coreC object 0)) that was (false not) (subcon (distanceR closest to) (coreC event 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "subcon"], "measure": [["conAmount", "event 0"]], "condition": [["object 0"]], "subcondition": ["event 1"], "extent": ["placename 0"]}}, {"Question": "Which fire hydrant is closest to the households in Oleander", "Cleaned_Question": "Which fire hydrant is closest to households in Oleander", "PlaceName": ["Oleander"], "Object": ["households", "fire hydrant"], "NER_Question": "which object1 is closest to object0 in placename0", "TreeStr": "(start which (measure (coreC object 1)) is (condition (distanceR closest to) (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 1"]], "condition": [["object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 3 minutes of driving time from the nearest fire station in Oleander", "Cleaned_Question": "What areas are within 3 minutes of driving time from nearest fire station in Oleander", "PlaceName": ["Oleander"], "Time": ["3 minutes"], "Object": ["fire station"], "Network": ["driving time"], "NER_Question": "what areas are within etime0 of network0 from nearest object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (time etime 0) of (coreC network 0) from (extreDist nearest) (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "network 0", "object 0 sel", "object 0"]], "extent": ["placename 0"]}}, {"Question": "How many buildings are within 3 minutes of driving time from fire stations in Oleander", "Cleaned_Question": "How many buildings are within 3 minutes of driving time from fire stations in Oleander", "PlaceName": ["Oleander"], "Time": ["3 minutes"], "Object": ["buildings", "fire stations"], "Network": ["driving time"], "NER_Question": "how many object0 are within etime0 of network0 from object1 in placename0", "TreeStr": "(start (measure (conAm how many) (coreC object 0)) are (condition (topoR within) (boolField (time etime 0) of (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conAmount", "object 0"]], "condition": [["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Which buildings are located in the fire areas in Oleander", "Cleaned_Question": "Which buildings are located in fire areas in Oleander", "PlaceName": ["Oleander"], "Field": ["fire areas"], "Object": ["buildings"], "NER_Question": "which object0 are located in field0 nominal in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR located in) (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "Which buildings were affected by tornado in Oleander", "Cleaned_Question": "Which buildings were affected by tornado in Oleander", "PlaceName": ["Oleander"], "Object": ["buildings"], "Event": ["tornado"], "NER_Question": "which object0 were affected by event0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) were (condition (topoR affected by) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the walkability for each neighborhood in Ghent", "Cleaned_Question": "What is walkability for each neighborhood in Ghent", "PlaceName": ["Ghent"], "Object": ["neighborhood"], "ObjectQ": ["walkability"], "NER_Question": "what is objectquality0 ratio for each object0 in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objectquality 0 ratio"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the density of residential units for each neighborhood in Ghent", "Cleaned_Question": "What is density of residential units for each neighborhood in Ghent", "PlaceName": ["Ghent"], "Object": ["residential units", "neighborhood"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["covpro 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the connectivity for each neighborhood in Ghent", "Cleaned_Question": "What is connectivity for each neighborhood in Ghent", "PlaceName": ["Ghent"], "Object": ["neighborhood"], "ObjectQ": ["connectivity"], "NER_Question": "what is objectquality0 ratio for each object0 in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objectquality 0 ratio"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the land use mix for each neighborhood in Ghent", "Cleaned_Question": "What is land use mix for each neighborhood in Ghent", "PlaceName": ["Ghent"], "Object": ["neighborhood"], "ObjectQ": ["land use mix"], "NER_Question": "what is objectquality0 ratio for each object0 in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objectquality 0 ratio"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the bikeability surface in the Metro Vancouver region in Canada", "Cleaned_Question": "What is bikeability surface in Metro Vancouver region in Canada", "PlaceName": ["Metro Vancouver region", "Canada"], "Field": ["bikeability surface"], "NER_Question": "what is field0 ratio in placename0 in placename1", "TreeStr": "(start what is (measure (coreC field 0 ratio)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the density surface of bicycle route in the Metro Vancouver region in Canada", "Cleaned_Question": "What is density surface of bicycle route in Metro Vancouver region in Canada", "PlaceName": ["Metro Vancouver region", "Canada"], "Field": ["density surface"], "Object": ["bicycle route"], "NER_Question": "what is field0 ratio of object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "Where are the bicycle tracks in the Metro Vancouver region in Canada", "Cleaned_Question": "Where are bicycle tracks in Metro Vancouver region in Canada", "PlaceName": ["Metro Vancouver region", "Canada"], "Object": ["bicycle tracks"], "NER_Question": "where are object0 in placename0 in placename1", "TreeStr": "(start (measure (location where are (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the density raster of intersections of bicycle-friendly streets in the Metro Vancouver region in Canada", "Cleaned_Question": "What is density raster of intersections of bicycle friendly streets in Metro Vancouver region in Canada", "PlaceName": ["Metro Vancouver region", "Canada"], "Field": ["density raster"], "Object": ["intersections", "bicycle friendly streets"], "NER_Question": "what is field0 ratio of object0 of object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC object 0) of (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0", "object 1"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the topography in the Metro Vancouver region in Canada", "Cleaned_Question": "What is topography in Metro Vancouver region in Canada", "PlaceName": ["Metro Vancouver region", "Canada"], "Field": ["topography"], "NER_Question": "what is field0 ratio in placename0 in placename1", "TreeStr": "(start what is (measure (coreC field 0 ratio)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the point density of cycling destinations in the Metro Vancouver region in Canada", "Cleaned_Question": "What is point density of cycling destinations in Metro Vancouver region in Canada", "PlaceName": ["Metro Vancouver region", "Canada"], "Field": ["point density"], "Object": ["cycling destinations"], "NER_Question": "what is field0 ratio of object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the network distance from hexagonal grid with 2000 meter to the closest public primary school in the Multifunctional Urban Area of Barcelona", "Cleaned_Question": "What is network distance from hexagonal grid with 2000 meter to closest public primary school in Multifunctional Urban Area of Barcelona", "PlaceName": ["Multifunctional Urban Area of Barcelona"], "Quantity": ["2000 meter"], "Object": ["public primary school"], "Network": ["network distance"], "NER_Question": "what is network0 from hexagonal grid with equantity0 to closest object0 in placename0", "TreeStr": "(start what is (measure (coreC network 0) from (grid hexagonal grid with (quantity equantity 0)) to (extreDist closest) (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field"], ["network 0", "grid", "object 0 sel", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the average network distance for people to public primary schools for each census area in Rotterdam", "Cleaned_Question": "What is average network distance for people to public primary schools for each census area in Rotterdam", "PlaceName": ["Rotterdam"], "Object": ["people", "public primary schools", "census area"], "Network": ["network distance"], "Amount": ["average"], "NER_Question": "what is amount0 network0 for object0 to object1 for each object2 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC network 0) for (coreC object 0) to (coreC object 1)) for each (support (coreC object 2)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 2"], ["amount 0", "network 0", "object 0", "object 1"]], "support": ["object 2"], "extent": ["placename 0"]}}, {"Question": "What is the percentage of population within 1000 meters network distance from hexagonal grids with a diameter of 2000 meters to primary schools in Rotterdam", "Cleaned_Question": "What is percentage of population within 1000 meters network distance from hexagonal grids with diameter of 2000 meters to primary schools in Rotterdam", "PlaceName": ["Rotterdam"], "Quantity": ["1000 meters", "2000 meters"], "Object": ["primary schools"], "Network": ["network distance"], "ConAmount": ["population"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of objconamount0 era within equantity0 network0 from hexagonal grids with diameter of equantity1 to object0 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC objconamount 0 era)) (condition (topoR within) (boolField (quantity equantity 0) (coreC network 0) from (grid hexagonal grids with diameter of (quantity equantity 1)) to (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["proportion 0 ira", "objconamount 0 era"]], "condition": [["boolField", "network 0", "grid", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the network distance to primary schools for children aged between 4 and 12 in Multifunctional Urban Area of Rotterdam", "Cleaned_Question": "What is network distance to primary schools for children aged between 4 and 12 in Multifunctional Urban Area of Rotterdam", "PlaceName": ["Multifunctional Urban Area of Rotterdam"], "Date": ["between 4 and 12"], "Object": ["primary schools", "children"], "Network": ["network distance"], "NER_Question": "what is network0 to object0 for object1 aged edate0 in placename0", "TreeStr": "(start what is (measure (coreC network 0) to (coreC object 0) for (coreC object 1)) (condition (boolR aged) (date edate 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["network 0", "object 0", "object 1"]], "condition": [[]], "extent": ["placename 0"]}}, {"Question": "What is the average network distance for people to the three closest primary schools for each census area in Rotterdam", "Cleaned_Question": "What is average network distance for people to 3 closest primary schools for each census area in Rotterdam", "PlaceName": ["Rotterdam"], "Object": ["people", "primary schools", "census area"], "Network": ["network distance"], "Amount": ["average"], "NER_Question": "what is amount0 network0 for object0 to 3 closest object1 for each object2 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC network 0) for (coreC object 0) to 3 (extreDist closest) (coreC object 1)) for each (support (coreC object 2)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 2"], ["amount 0", "network 0", "object 0", "object 1 sel", "object 1"]], "support": ["object 2"], "extent": ["placename 0"]}}, {"Question": "What is the number of people within 1000 meters network distance from hexagonal grids with a diameter of 2000 meters to primary schools in Barcelona", "Cleaned_Question": "What is number of people within 1000 meters network distance from hexagonal grids with diameter of 2000 meters to primary schools in Barcelona", "PlaceName": ["Barcelona"], "Quantity": ["1000 meters", "2000 meters"], "Object": ["people", "primary schools"], "Network": ["network distance"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 within equantity0 network0 from hexagonal grids with diameter of equantity1 to object1 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) (condition (topoR within) (boolField (quantity equantity 0) (coreC network 0) from (grid hexagonal grids with diameter of (quantity equantity 1)) to (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conamount 0 era", "object 0"]], "condition": [["boolField", "network 0", "grid", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Where are the best sites for metro stations in Karbala in Iraq", "Cleaned_Question": "Where are best sites for metro stations in Karbala in Iraq", "PlaceName": ["Karbala", "Iraq"], "Object": ["metro stations"], "NER_Question": "where are best sites for object0 in placename0 in placename1", "TreeStr": "(start (measure (location where are (allocation best sites for (coreC object 0)))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the travel time from the centroids of municipalities to outpatient services in Tuscany in Italy", "Cleaned_Question": "What is travel time from centroids of municipalities to outpatient services in Tuscany in Italy", "PlaceName": ["Tuscany", "Italy"], "Object": ["centroids", "municipalities", "outpatient services"], "Network": ["travel time"], "NER_Question": "what is network0 from object0 of object1 to object2 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC network 0) from (coreC object 0) of (coreC object 1) to (coreC object 2)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["network 0", "object 0", "object 1", "object 2"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the number of inhabitants for each 100 by 100 meter grid in Banten province in Indonesia", "Cleaned_Question": "What is number of inhabitants for each 100 by 100 meter grid in Banten province in Indonesia", "PlaceName": ["Banten province", "Indonesia"], "Quantity": ["100 by 100 meter"], "Object": ["inhabitants"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each equantity0 grid in placename0 in placename1", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (grid (quantity equantity 0) grid)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["field"], ["conamount 0 era", "object 0"]], "support": ["grid"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What area are within 50 km from family physician services in Saskatchewan in Canada", "Cleaned_Question": "What area are within 50 km from family physician services in Saskatchewan in Canada", "PlaceName": ["Saskatchewan", "Canada"], "Quantity": ["50 km"], "Object": ["family physician services"], "NER_Question": "what area are within equantity0 from object0 in placename0 in placename1", "TreeStr": "(start (measure (location what area)) are (condition (topoR within) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the travel time from the centers of 2 by 2 km grid cells to the closest hospital in Sichuan in China", "Cleaned_Question": "What is travel time from centers of 2 by 2 km grid cells to closest hospital in Sichuan in China", "PlaceName": ["Sichuan", "China"], "Quantity": ["2 by 2 km"], "Object": ["centers", "hospital"], "Network": ["travel time"], "NER_Question": "what is network0 from object0 of equantity0 grid cells to closest object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC network 0) from (coreC object 0) of (grid (quantity equantity 0) grid cells) to (extreDist closest) (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field"], ["network 0", "object 0", "grid", "object 1 sel", "object 1"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the percentage of elderly population to the total population for each municipality area in the Aichi prefecture in Japan", "Cleaned_Question": "What is percentage of elderly population to total population for each municipality area in Aichi prefecture in Japan", "PlaceName": ["Aichi prefecture", "Japan"], "Object": ["municipality area"], "ConAmount": ["elderly population", "total population"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of objconamount0 era to objconamount1 era for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC objconamount 0 era) to (coreC objconamount 1 era)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["proportion 0 ira", "objconamount 0 era", "objconamount 1 era"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the density of elderly population for each municipality area in Aichi prefecture in Japan", "Cleaned_Question": "What is density of elderly population for each municipality area in Aichi prefecture in Japan", "PlaceName": ["Aichi prefecture", "Japan"], "Object": ["municipality area"], "ConAmount": ["elderly population"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of objconamount0 era for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC objconamount 0 era)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["covpro 0 ira", "objconamount 0 era"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the potential geographic access of communities to the sexual and productive health services located in rural areas in Chibuto, Chokwe, Guija and Mandlakaze in Mozambique in 2019", "Cleaned_Question": "What is potential geographic access of communities to sexual and productive health services located in rural areas in Chibuto , Chokwe , Guija and Mandlakaze in Mozambique in 2019", "PlaceName": ["Chibuto", "Chokwe", "Guija", "Mandlakaze", "Mozambique"], "Date": ["2019"], "Field": ["rural areas"], "Object": ["communities", "sexual and productive health services"], "ObjectQ": ["potential geographic access"], "NER_Question": "what is objectquality0 ratio of object0 to object1 located in field0 nominal in placename0 , placename1 , placename2 and placename3 in placename4 in edate0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio) of (coreC object 0) to (coreC object 1)) (condition (topoR located in) (coreC field 0 nominal)) in (extent placename 0) (extent placename 1) (extent placename 2) and (extent placename 3) in (extent placename 4) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["objectquality 0 ratio", "object 0", "object 1"]], "condition": [["field 0 nominal"]], "extent": ["placename 0", "placename 1", "placename 2", "placename 3", "placename 4"], "temExtent": "edate 0"}}, {"Question": "Where is the best site for a new landfill in Houston", "Cleaned_Question": "Where is best site for new landfill in Houston", "PlaceName": ["Houston"], "Object": ["landfill"], "NER_Question": "where is best site for new object0 in placename0", "TreeStr": "(start (measure (location where is (allocation best site for new (coreC object 0)))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are not green belt areas in Houston", "Cleaned_Question": "What areas are not green belt areas in Houston", "PlaceName": ["Houston"], "Field": ["green belt areas"], "NER_Question": "what areas are not field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (false not) (condition (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 3000 meters from turbojet runways in Houston", "Cleaned_Question": "What areas are outside 3000 meters from turbojet runways in Houston", "PlaceName": ["Houston"], "Quantity": ["3000 meters"], "Object": ["turbojet runways"], "NER_Question": "what areas are outside equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 800 meter from major highways in Houston", "Cleaned_Question": "What areas are within 800 meter from major highways in Houston", "PlaceName": ["Houston"], "Quantity": ["800 meter"], "Object": ["major highways"], "NER_Question": "what areas are within equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the potential accessibility by local road for each 2 by 2 km grid cell in Finland", "Cleaned_Question": "What is potential accessibility by local road for each 2 by 2 km grid cell in Finland", "PlaceName": ["Finland"], "Quantity": ["2 by 2 km"], "ObjectQ": ["potential accessibility"], "Network": ["local road"], "NER_Question": "what is objectquality0 ratio by network0 for each equantity0 grid cell in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio) by (coreC network 0)) for each (support (grid (quantity equantity 0) grid cell)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["field"], ["objectquality 0 ratio", "network 0"]], "support": ["grid"], "extent": ["placename 0"]}}, {"Question": "What is the potential accessibility by regional road for each 2 by 2 km grid cell in Finland", "Cleaned_Question": "What is potential accessibility by regional road for each 2 by 2 km grid cell in Finland", "PlaceName": ["Finland"], "Quantity": ["2 by 2 km"], "ObjectQ": ["potential accessibility"], "Network": ["regional road"], "NER_Question": "what is objectquality0 ratio by network0 for each equantity0 grid cell in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio) by (coreC network 0)) for each (support (grid (quantity equantity 0) grid cell)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["field"], ["objectquality 0 ratio", "network 0"]], "support": ["grid"], "extent": ["placename 0"]}}, {"Question": "Where are clusters of pedestrian injuries in Georgia from 2000 to 2007", "Cleaned_Question": "Where are clusters of pedestrian injuries in Georgia from 2000 to 2007", "PlaceName": ["Georgia"], "Date": ["from 2000 to 2007"], "Event": ["pedestrian injuries"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of event0 in placename0 edate0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC event 0))) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the clusters of Chinese immigrants in Auckland from 1991 to 2006", "Cleaned_Question": "Where are clusters of Chinese immigrants in Auckland from 1991 to 2006", "PlaceName": ["Auckland"], "Date": ["from 1991 to 2006"], "Object": ["chinese immigrants"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of object0 in placename0 edate0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where is the hot spots and cold spots of robberies in Shanghai in January 2009", "Cleaned_Question": "Where is hot spots and cold spots of robberies in Shanghai in January 2009", "PlaceName": ["Shanghai"], "Date": ["January 2009"], "Event": ["robberies"], "CovAmount": ["hot spots", "cold spots"], "NER_Question": "where is covamount0 loc and covamount1 loc of event0 in placename0 in edate0", "TreeStr": "(start (measure (location where is (coreC covamount 0 loc) and (coreC covamount 1 loc) of (coreC event 0))) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "covamount 1 loc", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the cervix cancer mortality rate of white females for each city in the Western USA from 1970 to 1994", "Cleaned_Question": "What is cervix cancer mortality rate of white females for each city in Western USA from 1970 to 1994", "PlaceName": ["Western USA"], "Date": ["from 1970 to 1994"], "Object": ["white females", "city"], "ConConPro": ["cervix cancer mortality rate"], "NER_Question": "what is objconobjconpro0 ira of object0 for each object1 in placename0 edate0", "TreeStr": "(start what is (measure (coreC objconobjconpro 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["objconobjconpro 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the interpolation surface of NO2 concentration in Vancouver", "Cleaned_Question": "What is interpolation surface of NO2 concentration in Vancouver", "PlaceName": ["Vancouver"], "Field": ["interpolation surface", "no2 concentration"], "NER_Question": "what is field0 ratio of field1 ratio in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC field 1 ratio)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "field 1 ratio"]], "extent": ["placename 0"]}}, {"Question": "Where are health care facilities in Riverside San Bernardino in California", "Cleaned_Question": "Where are health care facilities in Riverside San Bernardino in California", "PlaceName": ["Riverside San Bernardino", "California"], "Object": ["health care facilities"], "NER_Question": "where are object0 in placename0 in placename1", "TreeStr": "(start (measure (location where are (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the population density for each neighborhood in Riverside San Bernardino in CA", "Cleaned_Question": "What is population density for each neighborhood in Riverside San Bernardino in CA", "PlaceName": ["Riverside San Bernardino", "CA"], "Object": ["neighborhood"], "ConCovPro": ["population density"], "NER_Question": "what is objconobjcovpro0 ira for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC objconobjcovpro 0 ira)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objconobjcovpro 0 ira"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the population density for each neighborhoods with no health care facility in Riverside-San Bernardino", "Cleaned_Question": "What is population density for each neighborhoods with no health care facility in Riverside San Bernardino", "PlaceName": ["Riverside San Bernardino"], "Object": ["neighborhoods", "health care facility"], "ConAmount": ["object1 conAmount"], "ConCovPro": ["population density"], "NER_Question": "what is objconobjcovpro0 ira for each object0 with no objconamount0 era in placename0", "TreeStr": "(start what is (measure (coreC objconobjcovpro 0 ira)) for each (support (coreC object 0)) (condition with (boolR no) (coreC objconamount 0 era)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support", "condition"], "measure": [["objectquality of object 0"], ["objconobjcovpro 0 ira"]], "condition": [["objconamount 0 era"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What land use is on top of sandy soil in the Netherlands", "Cleaned_Question": "What land use is on top of sandy soil in Netherlands", "PlaceName": ["Netherlands"], "Field": ["land use", "sandy soil"], "NER_Question": "what field0 nominal is on top of field1 nominal in placename0", "TreeStr": "(start what (measure (coreC field 0 nominal)) is (condition (topoR on top of) (coreC field 1 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["field 0 nominal"]], "condition": [["field 1 nominal"]], "extent": ["placename 0"]}}, {"Question": "What is the aspect of ski pistes in the Happy Valley resort", "Cleaned_Question": "What is aspect of ski pistes in Happy Valley resort", "PlaceName": ["Happy Valley resort"], "Field": ["aspect"], "Object": ["ski pistes"], "NER_Question": "what is field0 interval of object0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 interval) of (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 interval", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What are the directional trends of animal grazing in the Netherlands", "Cleaned_Question": "What are directional trends of animal grazing in Netherlands", "PlaceName": ["Netherlands"], "Event": ["animal grazing"], "CovAmount": ["directional trends"], "NER_Question": "what are covamount0 loc of event0 in placename0", "TreeStr": "(start what are (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the density surface of crape myrtles in Oleander", "Cleaned_Question": "What is density surface of crape myrtles in Oleander", "PlaceName": ["Oleander"], "Field": ["density surface"], "Object": ["crape myrtles"], "NER_Question": "what is field0 ratio of object0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the access score to family physicians services for each Census Consolidated Subdivision in Saskatchewan in Canada", "Cleaned_Question": "What is access score to family physicians services for each Census Consolidated Subdivision in Saskatchewan in Canada", "PlaceName": ["Saskatchewan", "Canada"], "Object": ["family physicians services", "census consolidated subdivision"], "ObjectQ": ["access score"], "NER_Question": "what is objectquality0 ratio to object0 for each object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio) to (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["objectquality 0 ratio", "object 0"]], "support": ["object 1"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the accessibility index from the centers of 2 by 2 km grid cells to the closest public hospital in Sichuan in China", "Cleaned_Question": "What is accessibility index from centers of 2 by 2 km grid cells to closest public hospital in Sichuan in China", "PlaceName": ["Sichuan", "China"], "Quantity": ["2 by 2 km"], "Object": ["centers", "public hospital"], "ObjectQ": ["accessibility index"], "NER_Question": "what is objectquality0 ratio from object0 of equantity0 grid cells to closest object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio) from (coreC object 0) of (grid (quantity equantity 0) grid cells) to (extreDist closest) (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field"], ["objectquality 0 ratio", "object 0", "grid", "object 1 sel", "object 1"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What areas are within 10 minutes, 30 minutes, and 60 minutes of driving time from private hospitals in Sichuan in China", "Cleaned_Question": "What areas are within 10 minutes , 30 minutes , and 60 minutes of driving time from private hospitals in Sichuan in China", "PlaceName": ["Sichuan", "China"], "Time": ["10 minutes , 30 minutes", "60 minutes"], "Object": ["private hospitals"], "Network": ["driving time"], "NER_Question": "what areas are within etime0 , and etime1 of network0 from object0 in placename0 in placename1", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (time etime 0) and (time etime 1) of (coreC network 0) from (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "network 0", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the travel time from the centers of 2 by 2 km grids to public hospitals in East Sichuan in China", "Cleaned_Question": "What is travel time from centers of 2 by 2 km grids to public hospitals in East Sichuan in China", "PlaceName": ["East Sichuan", "China"], "Quantity": ["2 by 2 km"], "Object": ["centers", "public hospitals"], "Network": ["travel time"], "NER_Question": "what is network0 from object0 of equantity0 grids to object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC network 0) from (coreC object 0) of (grid (quantity equantity 0) grids) to (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field"], ["network 0", "object 0", "grid", "object 1"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the kernel density surface of potential geographic access of communities to clinics in Chibuto in Mozambique in 2019", "Cleaned_Question": "What is kernel density surface of potential geographic access of communities to clinics in Chibuto in Mozambique in 2019", "PlaceName": ["Chibuto", "Mozambique"], "Date": ["2019"], "Field": ["kernel density surface"], "Object": ["communities", "clinics"], "ObjectQ": ["potential geographic access"], "NER_Question": "what is field0 ratio of objectquality0 ratio of object0 to object1 in placename0 in placename1 in edate0", "TreeStr": "(start what is (measure (coreC field 0 ratio) of (coreC objectquality 0 ratio) of (coreC object 0) to (coreC object 1)) in (extent placename 0) in (extent placename 1) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "objectquality 0 ratio", "object 0", "object 1"]], "extent": ["placename 0", "placename 1"], "temExtent": "edate 0"}}, {"Question": "What is the percentage of vacant houses to the house totals in Tarrant County, Texas", "Cleaned_Question": "What is percentage of vacant houses to house totals in Tarrant County , Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["vacant houses", "house"], "ConAmount": ["totals"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of object0 to object1 conamount0 era in placename0 , placename1", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC object 0) to (coreC object 1) (coreC conamount 0 era)) in (extent placename 0) (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["proportion 0 ira", "object 0", "object 1", "conamount 0 era"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the access score to nurse practitioner services for each Census Consolidated Subdivision in Alberta in Canada", "Cleaned_Question": "What is access score to nurse practitioner services for each Census Consolidated Subdivision in Alberta in Canada", "PlaceName": ["Alberta", "Canada"], "Object": ["census consolidated subdivision", "nurse practitioner services"], "ObjectQ": ["access score"], "NER_Question": "what is objectquality0 ratio to object1 for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio) to (coreC object 1)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objectquality 0 ratio", "object 1"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the percentage of population older than 65 for each Census Consolidated Subdivision in Alberta in Canada", "Cleaned_Question": "What is percentage of population older than 65 for each Census Consolidated Subdivision in Alberta in Canada", "PlaceName": ["Alberta", "Canada"], "Date": ["older than 65"], "Object": ["census consolidated subdivision"], "ConAmount": ["population"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of objconamount0 era edate0 for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC objconamount 0 era)) (condition (date edate 0)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["objectquality of object 0"], ["proportion 0 ira", "objconamount 0 era"]], "condition": [[]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the potential accessibility by national network for each 2 by 2km grid cell in Finland", "Cleaned_Question": "What is potential accessibility by national network for each 2 by 2 km grid cell in Finland", "PlaceName": ["Finland"], "Quantity": ["2 by 2 km"], "ObjectQ": ["potential accessibility"], "Network": ["national network"], "NER_Question": "what is objectquality0 ratio by network0 for each equantity0 grid cell in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio) by (coreC network 0)) for each (support (grid (quantity equantity 0) grid cell)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["field"], ["objectquality 0 ratio", "network 0"]], "support": ["grid"], "extent": ["placename 0"]}}, {"Question": "What is the travel time from the centroids of 2 by 2 km grid cells to the nearest railway stations in Finland", "Cleaned_Question": "What is travel time from centroids of 2 by 2 km grid cells to nearest railway stations in Finland", "PlaceName": ["Finland"], "Quantity": ["2 by 2 km"], "Object": ["centroids", "railway stations"], "Network": ["travel time"], "NER_Question": "what is network0 from object0 of equantity0 grid cells to nearest object1 in placename0", "TreeStr": "(start what is (measure (coreC network 0) from (coreC object 0) of (grid (quantity equantity 0) grid cells) to (extreDist nearest) (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field"], ["network 0", "object 0", "grid", "object 1 sel", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What is the travel time from the centroids of 2 by 2 km grid cells to the nearest airport in Finland", "Cleaned_Question": "What is travel time from centroids of 2 by 2 km grid cells to nearest airport in Finland", "PlaceName": ["Finland"], "Quantity": ["2 by 2 km"], "Object": ["centroids", "airport"], "Network": ["travel time"], "NER_Question": "what is network0 from object0 of equantity0 grid cells to nearest object1 in placename0", "TreeStr": "(start what is (measure (coreC network 0) from (coreC object 0) of (grid (quantity equantity 0) grid cells) to (extreDist nearest) (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field"], ["network 0", "object 0", "grid", "object 1 sel", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What areas do not have natural resources in the UK", "Cleaned_Question": "What areas not have natural resources in UK", "PlaceName": ["UK"], "Field": ["natural resources"], "NER_Question": "what areas not have field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) (false not) (condition (boolR have) (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 1000 meters of the major transport routes in Amsterdam", "Cleaned_Question": "What areas are within 1000 meters of major transport routes in Amsterdam", "PlaceName": ["Amsterdam"], "Quantity": ["1000 meters"], "Object": ["major transport routes"], "NER_Question": "what areas are within equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the proportion of people over 65 for each PC4 area in Amsterdam", "Cleaned_Question": "What is proportion of people over 65 for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Date": ["over 65"], "Object": ["people", "pc4 area"], "Proportion": ["proportion"], "NER_Question": "what is proportion0 ira of object0 edate0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC object 0)) (condition (date edate 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["objectquality of object 1"], ["proportion 0 ira", "object 0"]], "condition": [[]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the density of parks for each PC4 area in Amsterdam", "Cleaned_Question": "What is density of parks for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["parks", "pc4 area"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["covpro 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the average Euclidean distance to parks for each PC4 area in Amsterdam", "Cleaned_Question": "What is average Euclidean distance to parks for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["parks", "pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio to object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio) to (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "field 0 ratio", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the mean center of the fire calls for each alarm territory in Fort Worth in 2017", "Cleaned_Question": "What is mean center of fire calls for each alarm territory in Fort Worth in 2017", "PlaceName": ["Fort Worth"], "Date": ["2017"], "Object": ["alarm territory"], "Event": ["fire calls"], "CovAmount": ["mean center"], "NER_Question": "what is covamount0 loc of event0 for each object0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) for each (support (coreC object 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc", "event 0"]], "support": ["object 0"], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the central feature of fire station in Fort Worth", "Cleaned_Question": "What is central feature of fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "CovAmount": ["central feature"], "NER_Question": "what is covamount0 loc of object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the mean center of crimes weighted by the severity in Fort Worth", "Cleaned_Question": "What is mean center of crimes weighted by severity in Fort Worth", "PlaceName": ["Fort Worth"], "Event": ["crimes"], "EventQ": ["severity"], "CovAmount": ["mean center"], "NER_Question": "what is covamount0 loc of event0 weighted by eventquality0 ordinal in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) (condition (weight weighted by (coreC eventquality 0 ordinal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "extent": ["placename 0"]}}, {"Question": "Where is a best site for a radioactive waste site in UK", "Cleaned_Question": "Where is best site for radioactive waste site in UK", "PlaceName": ["UK"], "Object": ["radioactive waste site"], "NER_Question": "where is best site for object0 in placename0", "TreeStr": "(start (measure (location where is (allocation best site for (coreC object 0)))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["allocation", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Which store has the highest monthly sales in Tarrant County in Texas", "Cleaned_Question": "Which store has highest monthly sales in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["store"], "ConAmount": ["monthly sales"], "NER_Question": "which object0 has highest conamount0 era in placename0 in placename1", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC conamount 0 era)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["conamount 0 era sel", "conamount 0 era"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "Which road has the highest traffic counts in Tarrant County in Texas", "Cleaned_Question": "Which road has highest traffic counts in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["road"], "ConAmount": ["traffic counts"], "NER_Question": "which object0 has highest objconamount0 era in placename0 in placename1", "TreeStr": "(start which (measure (coreC object 0)) (condition (boolR has) (extremaR highest) (coreC objconamount 0 era)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["objconamount 0 era sel", "objconamount 0 era"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the mean center of accidents weighted by priority for each alarm territories in Fort Worth", "Cleaned_Question": "What is mean center of accidents weighted by priority for each alarm territories in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["alarm territories"], "Event": ["accidents"], "EventQ": ["priority"], "CovAmount": ["mean center"], "NER_Question": "what is covamount0 loc of event0 weighted by eventquality0 ordinal for each object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) (condition (weight weighted by (coreC eventquality 0 ordinal))) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the standard distance circles of fire calls answered by fire stations in Fort Worth", "Cleaned_Question": "What is standard distance circles of fire calls answered by fire stations in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire stations"], "Event": ["fire calls"], "CovAmount": ["standard distance circles"], "NER_Question": "what is covamount0 loc of event0 answered by object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) (condition (boolR answered by) (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["covamount 0 loc", "event 0"]], "condition": [["object 0"]], "extent": ["placename 0"]}}, {"Question": "What are the standard distance circles of accidents for each fire station in Fort Worth", "Cleaned_Question": "What are standard distance circles of accidents for each fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["accidents"], "CovAmount": ["standard distance circles"], "NER_Question": "what are covamount0 loc of event0 for each object0 in placename0", "TreeStr": "(start what are (measure (coreC covamount 0 loc) of (coreC event 0)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc", "event 0"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What are the standard distance circles of fire calls weighted by priority for each fire station in Fort Worth", "Cleaned_Question": "What are standard distance circles of fire calls weighted by priority for each fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["fire calls"], "EventQ": ["priority"], "CovAmount": ["standard distance circles"], "NER_Question": "what are covamount0 loc of event0 weighted by eventquality0 ordinal for each object0 in placename0", "TreeStr": "(start what are (measure (coreC covamount 0 loc) of (coreC event 0)) (condition (weight weighted by (coreC eventquality 0 ordinal))) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the directional trend in fire calls weighted by priority for each fire station in Fort Worth", "Cleaned_Question": "What is directional trend in fire calls weighted by priority for each fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["fire calls"], "EventQ": ["priority"], "CovAmount": ["directional trend"], "NER_Question": "what is covamount0 loc in event0 weighted by eventquality0 ordinal for each object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc)) (condition (topoRIn in (coreC event 0))) (condition (weight weighted by (coreC eventquality 0 ordinal))) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "condition", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc"]], "condition": [["event 0"], ["eventquality 0 ordinal"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the number of Hispanic people for each census block in Tarrant County in Texas", "Cleaned_Question": "What is number of Hispanic people for each census block in Tarrant County in Texas", "PlaceName": ["Tarrant County", "Texas"], "Object": ["hispanic people", "census block"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the percentage of the bald eagle to the bird totals for each park in Texas", "Cleaned_Question": "What is percentage of bald eagle to bird totals for each park in Texas", "PlaceName": ["Texas"], "Object": ["bald eagle", "bird", "park"], "ConAmount": ["totals"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of object0 to object1 conamount0 era for each object2 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC object 0) to (coreC object 1) (coreC conamount 0 era)) for each (support (coreC object 2)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 2"], ["proportion 0 ira", "object 0", "object 1", "conamount 0 era"]], "support": ["object 2"], "extent": ["placename 0"]}}, {"Question": "What is the households density for each census block in Fort Worth", "Cleaned_Question": "What is households density for each census block in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["households", "census block"], "CovPro": ["density"], "NER_Question": "what is object0 covpro0 ira for each object1 in placename0", "TreeStr": "(start what is (measure (coreC object 0) (coreC covpro 0 ira)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["object 0", "covpro 0 ira"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the average distance to the 7 nearest neighbors for fire alarms in Fort Worth", "Cleaned_Question": "What is average distance to 7 nearest neighbors for fire alarms in Fort Worth", "PlaceName": ["Fort Worth"], "Event": ["fire alarms"], "CovAmount": ["distance"], "Amount": ["average"], "NER_Question": "what is amount0 covamount0 loc to 7 nearest neighbors for event0 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC covamount 0 loc) to (distBandNei 7 nearest neighbors) for (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["amount 0", "covamount 0 loc", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the degree of clustering of fire alarms weighted by priority for each 60 meters distance band in Fort Worth", "Cleaned_Question": "What is degree of clustering of fire alarms weighted by priority for each 60 meters distance band in Fort Worth", "PlaceName": ["Fort Worth"], "Quantity": ["60 meters"], "Event": ["fire alarms"], "EventQ": ["priority"], "CovAmount": ["degree of clustering"], "NER_Question": "what is covamount0 loc of event0 weighted by eventquality0 ordinal for each equantity0 distance band in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) (condition (weight weighted by (coreC eventquality 0 ordinal))) for each (support (distBand (quantity equantity 0) distance band)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "support": ["distBand"], "extent": ["placename 0"]}}, {"Question": "What is the degree of clustering of fire alarms weighted by priority rankings for each distance band from 60 to 600 meters by 30 meter increments in Fort Worth", "Cleaned_Question": "What is degree of clustering of fire alarms weighted by priority rankings for each distance band from 60 to 600 meters by 30 meter increments in Fort Worth", "PlaceName": ["Fort Worth"], "Quantity": ["from 60 to 600 meters", "30 meter"], "Event": ["fire alarms"], "EventQ": ["priority rankings"], "CovAmount": ["degree of clustering"], "NER_Question": "what is covamount0 loc of event0 weighted by eventquality0 ordinal for each distance band equantity0 by equantity1 increments in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) (condition (weight weighted by (coreC eventquality 0 ordinal))) for each (support (distBand distance band (quantity equantity 0) by (quantity equantity 1) increments)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "support": ["distBand"], "extent": ["placename 0"]}}, {"Question": "How many fire calls are inside 150 by 150 meters grid cell in Fort Worth", "Cleaned_Question": "How many fire calls are inside 150 by 150 meters grid cell in Fort Worth", "PlaceName": ["Fort Worth"], "Quantity": ["150 by 150 meters"], "Event": ["fire calls"], "NER_Question": "how many event0 are inside equantity0 grid cell in placename0", "TreeStr": "(start (measure (conAm how many) (coreC event 0)) are (condition (topoR inside) (grid (quantity equantity 0) grid cell)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conAmount", "event 0"]], "condition": [["grid"]], "extent": ["placename 0"]}}, {"Question": "What is the degree of clustering of fire alarms density for each 300 meter distance band in Fort Worth", "Cleaned_Question": "What is degree of clustering of fire alarms density for each 300 meter distance band in Fort Worth", "PlaceName": ["Fort Worth"], "Quantity": ["300 meter"], "Event": ["fire alarms"], "CovAmount": ["degree of clustering"], "CovPro": ["density"], "NER_Question": "what is covamount0 loc of event0 covpro0 ira for each equantity0 distance band in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0) (coreC covpro 0 ira)) for each (support (distBand (quantity equantity 0) distance band)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["covamount 0 loc", "event 0", "covpro 0 ira"]], "support": ["distBand"], "extent": ["placename 0"]}}, {"Question": "Where are the clusters of fire alarms with similar priority for each 300 meter distance band in Fort Worth", "Cleaned_Question": "Where are clusters of fire alarms with similar priority for each 300 meter distance band in Fort Worth", "PlaceName": ["Fort Worth"], "Quantity": ["300 meter"], "Event": ["fire alarms"], "EventQ": ["priority"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of event0 with similar eventquality0 ordinal for each equantity0 distance band in placename0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC event 0))) (condition (weight with similar (coreC eventquality 0 ordinal))) for each (support (distBand (quantity equantity 0) distance band)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["location", "covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "support": ["distBand"], "extent": ["placename 0"]}}, {"Question": "Which houses are within 2 minutes driving time from fire stations in Oleander", "Cleaned_Question": "Which houses are within 2 minutes driving time from fire stations in Oleander", "PlaceName": ["Oleander"], "Time": ["2 minutes"], "Object": ["houses", "fire stations"], "Network": ["driving time"], "NER_Question": "which object0 are within etime0 network0 from object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (time etime 0) (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Which houses are within 3 minutes driving time from the nearest fire station in Oleander", "Cleaned_Question": "Which houses are within 3 minutes driving time from nearest fire station in Oleander", "PlaceName": ["Oleander"], "Time": ["3 minutes"], "Object": ["houses", "fire station"], "Network": ["driving time"], "NER_Question": "which object0 are within etime0 network0 from nearest object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (time etime 0) (coreC network 0) from (extreDist nearest) (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "network 0", "object 1 sel", "object 1"]], "extent": ["placename 0"]}}, {"Question": "What is the Euclidean distance to hospitals in Oleander", "Cleaned_Question": "What is Euclidean distance to hospitals in Oleander", "PlaceName": ["Oleander"], "Field": ["euclidean distance"], "Object": ["hospitals"], "NER_Question": "what is field0 ratio to object0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) to (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 20 minutes driving time from flower stores in Oleander", "Cleaned_Question": "What areas are within 20 minutes driving time from flower stores in Oleander", "PlaceName": ["Oleander"], "Time": ["20 minutes"], "Object": ["flower stores"], "Network": ["driving time"], "NER_Question": "what areas are within etime0 network0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (time etime 0) (coreC network 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "network 0", "object 0"]], "extent": ["placename 0"]}}, {"Question": "Which warehouse is closest to each household in Oleander", "Cleaned_Question": "Which warehouse is closest to each household in Oleander", "PlaceName": ["Oleander"], "Object": ["warehouse", "household"], "NER_Question": "which object0 is closest to each object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) is (condition (distanceR closest to) each (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["object 1"]], "extent": ["placename 0"]}}, {"Question": "Where are the tornado touchdowns in Oleander in April 2011", "Cleaned_Question": "Where are tornado touchdowns in Oleander in April 2011", "PlaceName": ["Oleander"], "Date": ["April 2011"], "Event": ["tornado touchdowns"], "NER_Question": "where are event0 in placename0 in edate0", "TreeStr": "(start (measure (location where are (coreC event 0))) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the tornado path in Oleander in April 2011", "Cleaned_Question": "What is tornado path in Oleander in April 2011", "PlaceName": ["Oleander"], "Date": ["April 2011"], "Event": ["tornado path"], "NER_Question": "what is event0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is a hurricane trajectory in Texas", "Cleaned_Question": "What is hurricane trajectory in Texas", "PlaceName": ["Texas"], "Event": ["hurricane trajectory"], "NER_Question": "what is event0 in placename0", "TreeStr": "(start what is (measure (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the intensity of a hurricane in Texas", "Cleaned_Question": "What is intensity of hurricane in Texas", "PlaceName": ["Texas"], "Event": ["hurricane"], "EventQ": ["intensity"], "NER_Question": "what is eventquality0 ratio of event0 in placename0", "TreeStr": "(start what is (measure (coreC eventquality 0 ratio) of (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["eventquality 0 ratio", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the mean center of crimes in Amsterdam in 2019", "Cleaned_Question": "What is mean center of crimes in Amsterdam in 2019", "PlaceName": ["Amsterdam"], "Date": ["2019"], "Event": ["crimes"], "CovAmount": ["mean center"], "NER_Question": "what is covamount0 loc of event0 in placename0 in edate0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 loc", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the degree of clustering of 911 calls for each distance band from 300 to 900 meters by 60 meter increments in Portland", "Cleaned_Question": "What is degree of clustering of 911 calls for each distance band from 300 to 900 meters by 60 meter increments in Portland", "PlaceName": ["Portland"], "Quantity": ["from 300 to 900 meters", "60 meter"], "Event": ["911 calls"], "CovAmount": ["degree of clustering"], "NER_Question": "what is covamount0 loc of event0 for each distance band equantity0 by equantity1 increments in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) of (coreC event 0)) for each (support (distBand distance band (quantity equantity 0) by (quantity equantity 1) increments)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["covamount 0 loc", "event 0"]], "support": ["distBand"], "extent": ["placename 0"]}}, {"Question": "What is the average network distance to hospitals from household for each PC4 area in Amsterdam", "Cleaned_Question": "What is average network distance to hospitals from household for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["hospitals", "household", "pc4 area"], "Network": ["network distance"], "Amount": ["average"], "NER_Question": "what is amount0 network0 to object0 from object1 for each object2 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC network 0) to (coreC object 0) from (coreC object 1)) for each (support (coreC object 2)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 2"], ["amount 0", "network 0", "object 0", "object 1"]], "support": ["object 2"], "extent": ["placename 0"]}}, {"Question": "What is the average construction year of buildings for each PC4 area in Amsterdam", "Cleaned_Question": "What is average construction year of buildings for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["buildings", "pc4 area"], "ObjectQ": ["construction year"], "Amount": ["average"], "NER_Question": "what is amount0 objectquality0 interval of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC objectquality 0 interval) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "objectquality 0 interval", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the average Euclidean distance to hospitals per PC4 area in Amsterdam", "Cleaned_Question": "What is average Euclidean distance to hospitals per PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["hospitals", "pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio to object0 per object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio) to (coreC object 0)) per (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "field 0 ratio", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the number of elderly people for each neighborhood in Amsterdam", "Cleaned_Question": "What is number of elderly people for each neighborhood in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["elderly people", "neighborhood"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the density of green roofs for each PC4 area in Amsterdam", "Cleaned_Question": "What is density of green roofs for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["green roofs", "pc4 area"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["covpro 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the average income of households for each PC4 area in Amsterdam", "Cleaned_Question": "What is average income of households for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["households", "pc4 area"], "CovAmount": ["income"], "Amount": ["average"], "NER_Question": "what is amount0 conamount0 era of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the percentage of seriously lonely people for each PC4 area in Amsterdam", "Cleaned_Question": "What is percentage of seriously lonely people for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["seriously lonely people", "pc4 area"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["proportion 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the Euclidean distance to green areas in Amsterdam", "Cleaned_Question": "What is Euclidean distance to green areas in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance", "green areas"], "NER_Question": "what is field0 ratio to field1 nominal in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) to (coreC field 1 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "field 1 nominal"]], "extent": ["placename 0"]}}, {"Question": "What is the average Euclidean distance to green areas per PC4 area in Amsterdam", "Cleaned_Question": "What is average Euclidean distance to green areas per PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance", "green areas"], "Object": ["pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio to field1 nominal per object0 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio) to (coreC field 1 nominal)) per (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["amount 0", "field 0 ratio", "field 1 nominal"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the average Euclidean distance to residential care complexes per PC4 area in Amsterdam", "Cleaned_Question": "What is average Euclidean distance to residential care complexes per PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["residential care complexes", "pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio to object0 per object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio) to (coreC object 0)) per (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "field 0 ratio", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the Safety Index for each district in Amsterdam", "Cleaned_Question": "What is Safety Index for each district in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["district"], "ObjectQ": ["safety index"], "NER_Question": "what is objectquality0 ratio for each object0 in placename0", "TreeStr": "(start what is (measure (coreC objectquality 0 ratio)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objectquality 0 ratio"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the number of sport facilities in a 1000 square meters circle per neighborhood in Amsterdam", "Cleaned_Question": "What is number of sport facilities in 1000 square meters circle per neighborhood in Amsterdam", "PlaceName": ["Amsterdam"], "Quantity": ["1000 square meters"], "Object": ["sport facilities", "neighborhood"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 in equantity0 circle per object1 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) (condition (topoRIn in (denNei (quantity equantity 0) circle))) per (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "condition": [[]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the Euclidean distance to subway stations in Amsterdam", "Cleaned_Question": "What is Euclidean distance to subway stations in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["subway stations"], "NER_Question": "what is field0 ratio to object0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) to (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the average Euclidean distance to subway stations per neighborhood in Amsterdam", "Cleaned_Question": "What is average Euclidean distance to subway stations per neighborhood in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["subway stations", "neighborhood"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio to object0 per object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio) to (coreC object 0)) per (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "field 0 ratio", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the Euclidean distance to tram stations in Amsterdam", "Cleaned_Question": "What is Euclidean distance to tram stations in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["tram stations"], "NER_Question": "what is field0 ratio to object0 in placename0", "TreeStr": "(start what is (measure (coreC field 0 ratio) to (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["field 0 ratio", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the average Euclidean distance to a tram station per neighborhood in Amsterdam", "Cleaned_Question": "What is average Euclidean distance to tram station per neighborhood in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["tram station", "neighborhood"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio to object0 per object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio) to (coreC object 0)) per (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "field 0 ratio", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the tree density for each PC4 area in Amsterdam", "Cleaned_Question": "What is tree density for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["tree", "pc4 area"], "CovPro": ["density"], "NER_Question": "what is object0 covpro0 ira for each object1 in placename0", "TreeStr": "(start what is (measure (coreC object 0) (coreC covpro 0 ira)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["object 0", "covpro 0 ira"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the average urban heat island effect for each PC4 area in Amsterdam", "Cleaned_Question": "What is average urban heat island effect for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["urban heat island effect"], "Object": ["pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio for each object0 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["amount 0", "field 0 ratio"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the WOZ-waarde for each neighborhood in Amsterdam", "Cleaned_Question": "What is WOZ waarde for each neighborhood in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["neighborhood"], "ConAmount": ["woz waarde"], "NER_Question": "what is conamount0 era for each object0 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["conamount 0 era"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the wall plant density for each PC4 area in Amsterdam", "Cleaned_Question": "What is wall plant density for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Object": ["wall plant", "pc4 area"], "CovPro": ["density"], "NER_Question": "what is object0 covpro0 ira for each object1 in placename0", "TreeStr": "(start what is (measure (coreC object 0) (coreC covpro 0 ira)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["object 0", "covpro 0 ira"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the percentage of water areas in the PC4 areas in Amsterdam", "Cleaned_Question": "What is percentage of water areas in PC4 areas in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["water areas"], "Object": ["pc4 areas"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of field0 nominal in object0 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC field 0 nominal)) (condition (topoRIn in (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["proportion 0 ira", "field 0 nominal"]], "condition": [["object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the percentage of population between 16 and 24 years to the total population per neighborhood in Amsterdam", "Cleaned_Question": "What is percentage of population between 16 and 24 years to total population per neighborhood in Amsterdam", "PlaceName": ["Amsterdam"], "Date": ["between 16 and 24 years"], "Object": ["neighborhood"], "ConAmount": ["total population", "population"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of objconamount1 era edate0 to objconamount0 era per object0 in placename0", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC objconamount 1 era)) (condition (date edate 0)))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["proportion 0 ira", "objconamount 1 era"]], "condition": [[]]}}, {"Question": "Which buildings are not within 1 minute of driving time from a fire station in Fort Worth", "Cleaned_Question": "Which buildings are not within 1 minute of driving time from fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Time": ["1 minute"], "Object": ["buildings", "fire station"], "Network": ["driving time"], "NER_Question": "which object0 are not within etime0 of network0 from object1 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (false not) (condition (topoR within) (boolField (time etime 0) of (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Which fire station is closest to the fire calls in Fort Worth", "Cleaned_Question": "Which fire station is closest to fire calls in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["fire calls"], "NER_Question": "which object0 is closest to event0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) is (condition (distanceR closest to) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the number of buildings affected by a hurricane in Oleander", "Cleaned_Question": "What is number of buildings affected by hurricane in Oleander", "PlaceName": ["Oleander"], "Object": ["buildings"], "Event": ["hurricane"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 affected by event0 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) (condition (topoR affected by) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conamount 0 era", "object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the number of people affected by a hurricane in Oleander", "Cleaned_Question": "What is number of people affected by hurricane in Oleander", "PlaceName": ["Oleander"], "Object": ["people"], "Event": ["hurricane"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 affected by event0 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) (condition (topoR affected by) (coreC event 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conamount 0 era", "object 0"]], "condition": [["event 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 3000 meters of the rivers in Spain", "Cleaned_Question": "What areas are outside 3000 meters of rivers in Spain", "PlaceName": ["Spain"], "Quantity": ["3000 meters"], "Object": ["rivers"], "NER_Question": "what areas are outside equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 5000 meters of the roads in Spain", "Cleaned_Question": "What areas are outside 5000 meters of roads in Spain", "PlaceName": ["Spain"], "Quantity": ["5000 meters"], "Object": ["roads"], "NER_Question": "what areas are outside equantity0 of object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) of (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the number of luxury hotels in Happy Valley ski resort", "Cleaned_Question": "What is number of luxury hotels in Happy Valley ski resort", "PlaceName": ["Happy Valley ski resort"], "Object": ["luxury hotels"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["conamount 0 era", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What is the number of arson cases in Fort Worth on February 2004", "Cleaned_Question": "What is number of arson cases in Fort Worth on February 2004", "PlaceName": ["Fort Worth"], "Date": ["February 2004"], "Event": ["arson cases"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of event0 in placename0 on edate0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC event 0)) in (extent placename 0) on (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["conamount 0 era", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the number of election votes for each precinct in Dallas", "Cleaned_Question": "What is number of election votes for each precinct in Dallas", "PlaceName": ["Dallas"], "Object": ["precinct"], "ConAmount": ["number", "election votes"], "NER_Question": "what is conamount0 era of eveconamount0 era for each object0 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC eveconamount 0 era)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["conamount 0 era", "eveconamount 0 era"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the number of dwelling units inside the flood zones in Oleander", "Cleaned_Question": "What is number of dwelling units inside flood zones in Oleander", "PlaceName": ["Oleander"], "Field": ["flood zones"], "Object": ["dwelling units"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 inside field0 nominal in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) (condition (topoR inside) (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conamount 0 era", "object 0"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What is the number of high school students for each senior high school district in Oleander", "Cleaned_Question": "What is number of high school students for each senior high school district in Oleander", "PlaceName": ["Oleander"], "Object": ["high school students", "senior high school district"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the number of buildings within 3 minutes of driving time from fire stations in Oleander", "Cleaned_Question": "What is number of buildings within 3 minutes of driving time from fire stations in Oleander", "PlaceName": ["Oleander"], "Time": ["3 minutes"], "Object": ["buildings", "fire stations"], "Network": ["driving time"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 within etime0 of network0 from object1 in placename0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) (condition (topoR within) (boolField (time etime 0) of (coreC network 0) from (coreC object 1))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["conamount 0 era", "object 0"]], "condition": [["boolField", "network 0", "object 1"]], "extent": ["placename 0"]}}, {"Question": "Where are the off street paths in the Metro Vancouver region in Canada", "Cleaned_Question": "Where are off street paths in Metro Vancouver region in Canada", "PlaceName": ["Metro Vancouver region", "Canada"], "Object": ["off street paths"], "NER_Question": "where are object0 in placename0 in placename1", "TreeStr": "(start (measure (location where are (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What land use areas are intersected with sandy soil in the Netherlands", "Cleaned_Question": "What land use areas are intersected with sandy soil in Netherlands", "PlaceName": ["Netherlands"], "Field": ["land use areas", "sandy soil"], "NER_Question": "what field0 nominal are intersected with field1 nominal in placename0", "TreeStr": "(start what (measure (coreC field 0 nominal)) are (condition (topoR intersected with) (coreC field 1 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["field 0 nominal"]], "condition": [["field 1 nominal"]], "extent": ["placename 0"]}}, {"Question": "What is the degree of dispersion for fire calls for each fire station in Fort Worth", "Cleaned_Question": "What is degree of dispersion for fire calls for each fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["fire calls"], "CovAmount": ["degree of dispersion"], "NER_Question": "what is covamount0 loc for event0 for each object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) for (coreC event 0)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc", "event 0"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the degree of dispersion for fire calls weighted by priority for each fire station in Fort Worth", "Cleaned_Question": "What is degree of dispersion for fire calls weighted by priority for each fire station in Fort Worth", "PlaceName": ["Fort Worth"], "Object": ["fire station"], "Event": ["fire calls"], "EventQ": ["priority"], "CovAmount": ["degree of dispersion"], "NER_Question": "what is covamount0 loc for event0 weighted by eventquality0 ordinal for each object0 in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 loc) for (coreC event 0)) (condition (weight weighted by (coreC eventquality 0 ordinal))) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition", "support"], "measure": [["objectquality of object 0"], ["covamount 0 loc", "event 0"]], "condition": [["eventquality 0 ordinal"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the percentage of elderly population to the total population for each 1 km grid in the Aichi prefecture in Japan", "Cleaned_Question": "What is percentage of elderly population to total population for each 1 km grid in Aichi prefecture in Japan", "PlaceName": ["Aichi prefecture", "Japan"], "Quantity": ["1 km"], "ConAmount": ["elderly population", "total population"], "Proportion": ["percentage"], "NER_Question": "what is proportion0 ira of objconamount0 era to objconamount1 era for each equantity0 grid in placename0 in placename1", "TreeStr": "(start what is (measure (coreC proportion 0 ira) of (coreC objconamount 0 era) to (coreC objconamount 1 era)) for each (support (grid (quantity equantity 0) grid)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["field"], ["proportion 0 ira", "objconamount 0 era", "objconamount 1 era"]], "support": ["grid"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the population for each city in Aichi prefecture in Japan", "Cleaned_Question": "What is population for each city in Aichi prefecture in Japan", "PlaceName": ["Aichi prefecture", "Japan"], "Object": ["city"], "ConAmount": ["population"], "NER_Question": "what is objconamount0 era for each object0 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC objconamount 0 era)) for each (support (coreC object 0)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["objconamount 0 era"]], "support": ["object 0"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the density of elderly population for each 500 meters grid in Aichi prefecture in Japan", "Cleaned_Question": "What is density of elderly population for each 500 meters grid in Aichi prefecture in Japan", "PlaceName": ["Aichi prefecture", "Japan"], "Quantity": ["500 meters"], "ConAmount": ["elderly population"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of objconamount0 era for each equantity0 grid in placename0 in placename1", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC objconamount 0 era)) for each (support (grid (quantity equantity 0) grid)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["field"], ["covpro 0 ira", "objconamount 0 era"]], "support": ["grid"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What is the lung cancer mortality rate of white males for each city in the Western USA from 1970 to 1994", "Cleaned_Question": "What is lung cancer mortality rate of white males for each city in Western USA from 1970 to 1994", "PlaceName": ["Western USA"], "Date": ["from 1970 to 1994"], "Object": ["white males", "city"], "ConConPro": ["lung cancer mortality rate"], "NER_Question": "what is objconobjconpro0 ira of object0 for each object1 in placename0 edate0", "TreeStr": "(start what is (measure (coreC objconobjconpro 0 ira) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["objconobjconpro 0 ira", "object 0"]], "support": ["object 1"], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where is the hot spots and cold spots of thefts in Shanghai in December 2009", "Cleaned_Question": "Where is hot spots and cold spots of thefts in Shanghai in December 2009", "PlaceName": ["Shanghai"], "Date": ["December 2009"], "Event": ["thefts"], "CovAmount": ["hot spots", "cold spots"], "NER_Question": "where is covamount0 loc and covamount1 loc of event0 in placename0 in edate0", "TreeStr": "(start (measure (location where is (coreC covamount 0 loc) and (coreC covamount 1 loc) of (coreC event 0))) in (extent placename 0) in (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "covamount 1 loc", "event 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the number of injured pedestrians for each census tract in Georgia from 2000 to 2007", "Cleaned_Question": "What is number of injured pedestrians for each census tract in Georgia from 2000 to 2007", "PlaceName": ["Georgia"], "Date": ["from 2000 to 2007"], "Object": ["injured pedestrians", "census tract"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each object1 in placename0 edate0", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the clusters of Indian immigrants in Auckland from 1991 to 2006", "Cleaned_Question": "Where are clusters of Indian immigrants in Auckland from 1991 to 2006", "PlaceName": ["Auckland"], "Date": ["from 1991 to 2006"], "Object": ["indian immigrants"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of object0 in placename0 edate0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the clusters of Korean immigrants in Auckland from 1991 to 2007", "Cleaned_Question": "Where are clusters of Korean immigrants in Auckland from 1991 to 2007", "PlaceName": ["Auckland"], "Date": ["from 1991 to 2007"], "Object": ["korean immigrants"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of object0 in placename0 edate0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the clusters of Filipino immigrants in Auckland from 1991 to 2008", "Cleaned_Question": "Where are clusters of Filipino immigrants in Auckland from 1991 to 2008", "PlaceName": ["Auckland"], "Date": ["from 1991 to 2008"], "Object": ["filipino immigrants"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of object0 in placename0 edate0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the clusters of Japanese immigrants in Auckland from 1991 to 2009", "Cleaned_Question": "Where are clusters of Japanese immigrants in Auckland from 1991 to 2009", "PlaceName": ["Auckland"], "Date": ["from 1991 to 2009"], "Object": ["japanese immigrants"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of object0 in placename0 edate0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "Where are the clusters of Cambodian immigrants in Auckland from 1991 to 2010", "Cleaned_Question": "Where are clusters of Cambodian immigrants in Auckland from 1991 to 2010", "PlaceName": ["Auckland"], "Date": ["from 1991 to 2010"], "Object": ["cambodian immigrants"], "CovAmount": ["clusters"], "NER_Question": "where are covamount0 loc of object0 in placename0 edate0", "TreeStr": "(start (measure (location where are (coreC covamount 0 loc) of (coreC object 0))) in (extent placename 0) (temEx edate 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["location", "covamount 0 loc", "object 0"]], "extent": ["placename 0"], "temExtent": "edate 0"}}, {"Question": "What is the number of inhabitants for each village in Banten province in Indonesia", "Cleaned_Question": "What is number of inhabitants for each village in Banten province in Indonesia", "PlaceName": ["Banten province", "Indonesia"], "Object": ["inhabitants", "village"], "ConAmount": ["number"], "NER_Question": "what is conamount0 era of object0 for each object1 in placename0 in placename1", "TreeStr": "(start what is (measure (coreC conamount 0 era) of (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["conamount 0 era", "object 0"]], "support": ["object 1"], "extent": ["placename 0", "placename 1"]}}, {"Question": "What areas are outside 300 meters from streams in Houston", "Cleaned_Question": "What areas are outside 300 meters from streams in Houston", "PlaceName": ["Houston"], "Quantity": ["300 meters"], "Object": ["streams"], "NER_Question": "what areas are outside equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are not park in Houston", "Cleaned_Question": "What areas are not park in Houston", "PlaceName": ["Houston"], "Object": ["park"], "NER_Question": "what areas are not object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (false not) (condition (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 155 meters from nature reserve districts in Houston", "Cleaned_Question": "What areas are outside 155 meters from nature reserve districts in Houston", "PlaceName": ["Houston"], "Quantity": ["155 meters"], "Field": ["nature reserve districts"], "NER_Question": "what areas are outside equantity0 from field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 155 meters from endangered species areas in Houston", "Cleaned_Question": "What areas are outside 155 meters from endangered species areas in Houston", "PlaceName": ["Houston"], "Quantity": ["155 meters"], "Field": ["endangered species areas"], "NER_Question": "what areas are outside equantity0 from field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 155 meters from developed areas in Houston", "Cleaned_Question": "What areas are outside 155 meters from developed areas in Houston", "PlaceName": ["Houston"], "Quantity": ["155 meters"], "Field": ["developed areas"], "NER_Question": "what areas are outside equantity0 from field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are not wetlands in Houston", "Cleaned_Question": "What areas are not wetlands in Houston", "PlaceName": ["Houston"], "Field": ["wetlands"], "NER_Question": "what areas are not field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (false not) (condition (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 60 meters from water body in Houston", "Cleaned_Question": "What areas are outside 60 meters from water body in Houston", "PlaceName": ["Houston"], "Quantity": ["60 meters"], "Field": ["water body"], "NER_Question": "what areas are outside equantity0 from field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC field 0 nominal))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 60 meters from residence in Houston", "Cleaned_Question": "What areas are outside 60 meters from residence in Houston", "PlaceName": ["Houston"], "Quantity": ["60 meters"], "Object": ["residence"], "NER_Question": "what areas are outside equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 150 meters from hospitals in Houston", "Cleaned_Question": "What areas are outside 150 meters from hospitals in Houston", "PlaceName": ["Houston"], "Quantity": ["150 meters"], "Object": ["hospitals"], "NER_Question": "what areas are outside equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are outside 150 meters from schools in Houston", "Cleaned_Question": "What areas are outside 150 meters from schools in Houston", "PlaceName": ["Houston"], "Quantity": ["150 meters"], "Object": ["schools"], "NER_Question": "what areas are outside equantity0 from object0 in placename0", "TreeStr": "(start (measure (location what areas)) are (condition (topoR outside) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0"]}}, {"Question": "What areas are not hurricane areas in Houston", "Cleaned_Question": "What areas are not hurricane areas in Houston", "PlaceName": ["Houston"], "Field": ["hurricane areas"], "NER_Question": "what areas are not field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (false not) (condition (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are not flood plain areas in Houston", "Cleaned_Question": "What areas are not flood plain areas in Houston", "PlaceName": ["Houston"], "Field": ["flood plain areas"], "NER_Question": "what areas are not field0 nominal in placename0", "TreeStr": "(start (measure (location what areas)) are (false not) (condition (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What areas are within 500 meters from universities in Karbala in Iraq", "Cleaned_Question": "What areas are within 500 meters from universities in Karbala in Iraq", "PlaceName": ["Karbala", "Iraq"], "Quantity": ["500 meters"], "Object": ["universities"], "NER_Question": "what areas are within equantity0 from object0 in placename0 in placename1", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "What areas are within 500 meters from religious places in Karbala in Iraq", "Cleaned_Question": "What areas are within 500 meters from religious places in Karbala in Iraq", "PlaceName": ["Karbala", "Iraq"], "Quantity": ["500 meters"], "Object": ["religious places"], "NER_Question": "what areas are within equantity0 from object0 in placename0 in placename1", "TreeStr": "(start (measure (location what areas)) are (condition (topoR within) (boolField (quantity equantity 0) from (coreC object 0))) in (extent placename 0) in (extent placename 1))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["boolField", "object 0"]], "extent": ["placename 0", "placename 1"]}}, {"Question": "Which hospitals are within 15 minute driving time of an accident in New York", "Cleaned_Question": "Which hospitals are within 15 minute driving time of accident in New York", "PlaceName": ["New York"], "Time": ["15 minute"], "Object": ["hospitals"], "Event": ["accident"], "Network": ["driving time"], "NER_Question": "which object0 are within etime0 network0 of event0 in placename0", "TreeStr": "(start which (measure (coreC object 0)) are (condition (topoR within) (boolField (time etime 0) (coreC network 0) of (coreC event 0))) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["object 0"]], "condition": [["boolField", "network 0", "event 0"]], "extent": ["placename 0"]}}, {"Question": "What is the average Euclidean distance to the nearest supermarket for each PC4 area in Amsterdam", "Cleaned_Question": "What is average Euclidean distance to nearest supermarket for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["euclidean distance"], "Object": ["supermarket", "pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio to nearest object0 for each object1 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio) to (extreDist nearest) (coreC object 0)) for each (support (coreC object 1)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 1"], ["amount 0", "field 0 ratio", "object 0 sel", "object 0"]], "support": ["object 1"], "extent": ["placename 0"]}}, {"Question": "What is the average noise level for each PC4 area in Amsterdam", "Cleaned_Question": "What is average noise level for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["noise level"], "Object": ["pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ordinal for each object0 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ordinal)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["amount 0", "field 0 ordinal"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the average temperature for each PC4 area in Amsterdam", "Cleaned_Question": "What is average temperature for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["temperature"], "Object": ["pc4 area"], "Amount": ["average"], "NER_Question": "what is amount0 field0 ratio for each object0 in placename0", "TreeStr": "(start what is (measure (coreC amount 0) (coreC field 0 ratio)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["amount 0", "field 0 ratio"]], "support": ["object 0"], "extent": ["placename 0"]}}, {"Question": "What is the total area of agriculture in Netherlands", "Cleaned_Question": "What is total area of agriculture in Netherlands", "PlaceName": ["Netherlands"], "Field": ["agriculture"], "CovAmount": ["total area"], "NER_Question": "what is covamount0 era of field0 nominal in placename0", "TreeStr": "(start what is (measure (coreC covamount 0 era) of (coreC field 0 nominal)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure"], "measure": [["covamount 0 era", "field 0 nominal"]], "extent": ["placename 0"]}}, {"Question": "What area do have elevation higher than 30 meters in Netherlands", "Cleaned_Question": "What area have elevation higher than 30 meters in Netherlands", "PlaceName": ["Netherlands"], "Quantity": ["higher than 30 meters"], "Field": ["elevation"], "NER_Question": "what area have field0 ratio equantity0 in placename0", "TreeStr": "(start (measure (location what area)) (condition (boolR have) (coreC field 0 ratio) (quantity equantity 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "condition"], "measure": [["location"]], "condition": [["field 0 ratio"]], "extent": ["placename 0"]}}, {"Question": "What is the density of greens for each PC4 area in Amsterdam", "Cleaned_Question": "What is density of greens for each PC4 area in Amsterdam", "PlaceName": ["Amsterdam"], "Field": ["greens"], "Object": ["pc4 area"], "CovPro": ["density"], "NER_Question": "what is covpro0 ira of field0 nominal for each object0 in placename0", "TreeStr": "(start what is (measure (coreC covpro 0 ira) of (coreC field 0 nominal)) for each (support (coreC object 0)) in (extent placename 0))", "CoreCTrans": {"sequence": ["measure", "support"], "measure": [["objectquality of object 0"], ["covpro 0 ira", "field 0 nominal"]], "support": ["object 0"], "extent": ["placename 0"]}}]